{"version":3,"sources":["components/blockies.js","components/SharedStyling.js","connectors.ts","hooks.ts","../../contracts/src/addresses.js","../../contracts/src/bytecodes.js","../../contracts/src/index.js","contracts.js","components/Links.js","components/Header.js","utils.js","components/Emoji.js","components/VestingDetails.js","components/VestingChart.js","components/VestingSchedule.js","helpers/EPNSCoreHelper.js","singletons/YieldFarmingDataStore.js","components/VestingActions.js","components/TokenVestingApp.js","components/FundsDistributorCard.js","components/FundsDistributorFactoryCard.js","components/VestedReservesCard.js","components/AdminPanel.js","components/InfoTooltip.js","components/BlockiesIdenticon.js","components/PoolCard.js","segments/YieldFarming.js","singletons/ChannelsDataStore.js","singletons/UsersDataStore.js","pages/Home.js","components/Profile.js","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js"],"names":["randseed","Array","rand","t","createColor","Math","floor","buildOpts","opts","newOpts","seed","random","pow","toString","i","length","charCodeAt","seedrand","size","scale","color","bgcolor","spotcolor","renderIcon","canvas","imageData","width","height","dataWidth","ceil","mirrorWidth","data","y","row","x","r","slice","reverse","concat","push","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","document","createElement","render","module","exports","window","blockies","Section","styled","section","_templateObject","_taggedTemplateLiteral","props","align","direction","theme","gradient","margin","padding","overflow","Content","_templateObject2","_templateObject3","_templateObject4","div","_templateObject5","ItemBreak","_templateObject6","Item","_templateObject7","wrap","position","bg","flex","self","justify","minWidth","maxWidth","textAlign","filter","border","radius","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","_templateObject8","H2","_templateObject9","bottom","top","transform","_templateObject10","_templateObject11","arcRGB","css","_templateObject12","h1","_templateObject13","h2","_templateObject14","weight","textTransform","spacing","family","P","h3","_templateObject15","img","_templateObject16","p","_templateObject17","Span","_templateObject18","span","_templateObject19","pos","right","left","z","B","_templateObject20","Anchor","ul","_templateObject21","li","_templateObject22","a","_templateObject23","hoverBG","A","_templateObject24","Button","button","_templateObject25","_templateObject26","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","_templateObject27","input","_templateObject28","display","outline","cursor","hand","textarea","_templateObject29","require","config","RPC_URLS","1","process","REACT_APP_RPC_URL_1","3","REACT_APP_RPC_URL_3","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","ledger","LedgerConnector","chainId","url","pollingInterval","console","log","TrezorConnector","manifestEmail","manifestAppUrl","portis","PortisConnector","dAppId","networks","addresses","ceaErc20","epnscore","pushSafe","dai","aDai","epnsToken","fundsDistributorFactory","strategicAllocationFactory","advisorsFactory","teamFactory","investorsAllocationFactory","vestedReserves","commReserves","foundationA","foundationB","commUnlockedReserves","epnsMultisig","staking","yieldFarmPUSH","yieldFarmLP","epnsLPToken","uniswapV2Router02","WETHAddress","USDTAddress","distributor","bytecodes","fundsDistributor","abis","erc20","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsAbi","tokenVesting","tokenVestingAbi","fundsDistributorAbi","fundsDistributorFactoryAbi","reserves","reservesAbi","vestedReservesAbi","multiSigWallet","multiSigWalletAbi","daiAbi","stakingAbi","yieldFarming","yieldFarmingAbi","UniswapV2Router02Abi","ethers","getFundsDistributor","library","account","signer","getSigner","ContractFactory","getTokenVesting","address","Contract","getFundsDistributorFactory","getVestedReserves","getEPNSToken","getMultisigWallet","ContractLink","_ref","href","React","target","TokenLink","_ref2","name","TransactionLink","hash","HeaderStyle","Header","token","tokenName","className","displayAmount","amount","decimals","BigNumber","from","tokensToBn","mul","queryVestingLink","async","factoryAddresses","Object","values","DeployFundee","filters","logs","queryFilter","args","queryVestingLinkMultiple","Emoji","e","role","TableRow","title","children","TitleLink","disabled","h4","VestingDetails","details","getData","setLoader","active","error","useWeb3React","start","cliff","end","total","released","vested","revocable","beneficiary","releasable","sub","formatDate","date","milliseconds","moment","format","formatTokens","symbol","VestingChart","getPoints","now","Date","points","getDataPointAt","lt","gt","getAmountAt","slope","toFixed","Line","datasets","_objectSpread","lineTension","backgroundColor","borderColor","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartData","options","legend","scales","xAxes","type","time","tooltipFormat","scaleLabel","labelString","yAxes","Empty","Revoked","VestingSchedule","revoked","EPNSCoreHelper","getOwnerInfo","Promise","resolve","reject","contract","governance","then","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","mapAddressChannels","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","AddChannel","block","UpdateChannel","filteredResponse","forEach","item","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","getSubscribedStatus","memberExists","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","metricFormatter","num","digits","si","value","replace","ONE_PUSH","tokenToBn","tokenBNtoNumber","tokenBn","YieldFarmingDataStore","constructor","state","yieldFarmingPUSH","yieldFarmingLP","rewardForCurrentEpochPush","rewardForCurrentEpochLP","genesisEpochAmountPUSH","deprecationPerEpochPUSH","genesisEpochAmountLP","deprecationPerEpochLP","init","this","getPoolStats","currentEpochPUSH","getCurrentEpoch","pushPriceAmounts","getAmountsOut","pushPrice","pushAmountReserve","balanceOf","wethAmountReserve","attach","ethPriceAmounts","uniLpPrice","totalSupply","lpToPushRatio","totalValueLocked","getPoolSize","add","epochDuration","epochEndTimestamp","epochStart","pushTotalDistributedAmount","TOTAL_DISTRIBUTED_AMOUNT","lpTotalDistributedAmount","totalDistributedAmount","pushRewardsDistributed","getPushRewardsDistributed","currentEpoch","getPUSHPoolStats","totalEpochPUSH","NR_OF_EPOCHS","genesisEpochAmount","deprecationPerEpoch","rewardForCurrentEpoch","calcTotalAmountPerEpoch","poolBalance","stakingAPR","calcStakingAPR","getLPPoolStats","calcLPPoolAPR","poolStats","getUserData","potentialUserReward","calculateUserEpochReward","epochStakeNext","getEpochStake","totalAccumulatedReward","totalAvailableReward","lastEpochIdHarvested","currentEpochLP","pushPoolRewardsDistributed","lpPoolRewardsDistributed","rewardForCurrentEpochPUSH","epochId","calcAnnualEpochReward","currentEpochReward","depreciate","weeks","totalStaked","apr","parseInt","epochStake","poolSize","_YieldFarmingDataStore","instance","Action","Label","Input","VestingActions","multisigContract","loaderTheme","loadAPR","actionable","canRevoke","setRevoke","useState","recipientAddress","setRecipientAddress","transferAmount","setTransferAmount","newBeneficiary","setNewBeneficiary","loading","setLoading","setPoolStats","pushPoolStats","setPushPoolStats","lpPoolStats","setLpPoolStats","userDataPUSH","setUserDataPUSH","userDataLP","setUserDataLP","formattedDuration","setFormattedDuration","setEpnsToken","setStaking","setYieldFarmingPUSH","setYieldFarmingLP","setUniswapV2Router02","showAnswers","setShowAnswers","loadingUserData","setLoadingUserData","useCallback","getUserDataPUSH","getUserDataLP","useEffect","uniswapV2Router02Instance","syncData","startLoader","stopLoader","Loader","Fragment","onClick","tx","populateTransaction","release","submitTransaction","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","wait","message","placeholder","onChange","releaseToAddress","setBeneficiary","CardTitle","TokenVestingApp","multipleVesting","vestingAddresses","setDetails","isSearchingVesting","setIsSearchingVesting","vestingAddress","setVestingAddress","vesting1","setVesting1","vesting2","setVesting2","manualVestingAddress","setManualVestingAddress","manualBeneficiaryAddress","setManualBeneficiaryAddress","multisigAddress","setMultisigAddress","setMultisigContract","getVestingLink","vestingContractAddresses","vestingContractAddress","tokenContract","owner","duration","balance","vestedAmount","getVestingLinkFromAddress","id","checked","for","Toaster","ToasterMsg","LoaderToast","msg","Card","FundsDistributorCard","startEpoch","setStartEpoch","cliffDuration","setCliffDuration","setDuration","setRevocable","identifier","setIdentifier","deployedAddress","setDeployedAddress","loader","deployedVestingAddress","txToast","deploy","deployTransaction","creates","update","TYPE","SUCCESS","fundsDistributorInstance","transferOwnership","ERROR","FundsDistributorFactoryCard","withdrawAmount","setWithdrawAmount","tokenBalance","setTokenBalance","getTokenBalance","bnTransferAmount","deployFundee","style","bnWithdrawAmount","withdrawTokens","VestedReservesCard","revoke","Select","select","Container","AdminPanel","revokeFundsDistributorFactory","setRevokeFundsDistributorFactory","releaseVestingAddress","setReleaseVestingAddress","revokeVestingAddress","setRevokeVestingAddress","commUnlockedReservesBalance","setCommUnlockedReservesBalance","confirmMultisigTxID","setConfirmMultisigTxID","executeMultisigTxID","setExecuteMultisigTxID","revokeMultisigTxID","setRevokeMultisigTxID","multisigFactoryContractAddress","setMultisigFactoryContractAddress","multisigBeneficiaryContractAddress","setMultisigBeneficiaryContractAddress","confirmDelegateAddress","setConfirmDelegateAddress","getCommReservesBalance","parseUnits","constants","HashZero","multisigContractInstance","confirmTransaction","executeTransaction","revokeConfirmation","fundsDistributorFactoryInstance","delegate","revokeFundeeTokens","getReserves","transferTokensToAddress","InfoTooltip","BlockiesIdenticon","Component","super","getOpts","componentDidMount","draw","componentDidUpdate","prevProps","ref","borderBottom","fg","h5","YieldFarming","bigNumberify","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","callbacks","epnsReadProvider","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","callbackID","callback","entries","Subscribe","count","memberCount","Unsubscribe","addCallbacks","callbackType","removeCallbacks","incrementCount","getChannelsMetaAsync","channelsDummy","getChannelMetaAsync","sort","b","channelAddress","getChannelMetaViaAddressAsync","getChannelJsonAsync","_ChannelsDataStore","UserEvents","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","PublicKeyRegistered","once","incrementUsersCountAsync","_UsersDataStore","Controls","ControlButton","ControlImage","ControlText","label","Interface","Home","setBadgeCount","bellPressed","ReactGA","pageview","controlAt","setControlAt","userClickedAt","controlIndex","isAccountAdmin","index","src","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","Blockies","toLowerCase","substring","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","AnimateOnChange","animationIn","animationOut","durationOut","HeaderContainer","Logo","Notice","PrimaryTheme","ThirdTheme","Connection","phase","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","dotenv","web3Connectors","Injected","obj","logo","WalletConnect","Ledger","Portis","getLibrary","provider","connector","providers","Web3Provider","Web3ReactProvider","App","activate","setBellPressed","initialize","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","arguments","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","ParentContainer","HomeContainer","ProviderLogo","srcSet","keys","currentConnector","image","ProviderButton","key","ProviderImage","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","header","attrs","Boolean","location","hostname","match","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f986766d.chunk.js","sourcesContent":["(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  1: process.env.REACT_APP_RPC_URL_1 as string,\n  3: process.env.REACT_APP_RPC_URL_3 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1] })\n\n// export const network = new NetworkConnector({\n//   urls: { 3: RPC_URLS[3] },\n//   defaultChainId: 3,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n\nconsole.log(RPC_URLS[1]);\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://incentives.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [1, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0xb02E99b9634bD21A8e3E36cc7adb673287A8FeaC\",\n  pushSafe: \"0x19Ff5f2C05aC6a303aF6d5002C99686e823EBE72\",\n  dai: \"0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108\",\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n  epnsToken: \"0xf418588522d5dd018b425E472991E52EBBeEEEEE\",\n  fundsDistributorFactory: {\n    strategicAllocationFactory: \"0x4F2a8c211De3752FDFe2bC45737509dA8490eb28\",\n    advisorsFactory: \"0x809A48D85E68610d01Cd4a9c88E694aeFc858CFE\",\n    teamFactory: \"0x876DfF9043CFEdA0277031C7242744d6Fd3BC749\",\n    investorsAllocationFactory: \"0xb10926Ab97774c3d08a7ED4bC7e65eb0AD09bb3d\",\n  },\n  vestedReserves: {\n    commReserves: \"0x68a9832153fd7f95f1a3fa24fccc3d63a6486e66\",  // deprecated = 0x6f59b37e9eabeca527504988c3c7d6d6e77e827a\n    foundationA: \"0xF1A0baa73205E97D9478752562d06F6dD5daEa2f\",\n    foundationB: \"0x16b41A27dBD3E14F09AB1D57499Bf6738f23812A\",\n  },\n  commUnlockedReserves: \"0x0cc23a784F9753FA3359dC3aC261a6593cCf214e\",\n  epnsMultisig: \"0x4957091F11Ca0A298a6656607Cc3B973cebb1F5c\",\n\n  staking: \"0xB72ff1e675117beDefF05a7D0a472c3844cfec85\",\n  yieldFarmPUSH: \"0x6019B84E2eE9EB62BC42E32AB6375A7095886366\",\n  yieldFarmLP: \"0xbB2A70e67770D0A7F5f42d883C5BBE9b85e0DcD6\",\n  epnsToken: \"0xf418588522d5dd018b425E472991E52EBBeEEEEE\",\n  epnsLPToken: \"0xaf31fd9c3b0350424bf96e551d2d1264d8466205\",\n\n  uniswapV2Router02: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n\n  // WETHAddress: \"0xc778417e063141139fce010982780140aa0cd5ab\", // ropsten address\n  // USDTAddress: \"0xad6d458402f60fd3bd25163575031acdce07538d\", // ropsten address\n\n  WETHAddress: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\", // mainnet address\n  USDTAddress: \"0xdac17f958d2ee523a2206206994597c13d831ec7\", // mainnet address\n\n  distributor: \"0x64CfAb2eA55ADAe08c9040fdA247828444fB9D0D\", //mainnet address\n};\n\nexport default addresses;\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst bytecodes = {\n  fundsDistributor: \"\",\n};\n\nexport default bytecodes;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport epnsAbi from \"./abis/EPNS.json\";\nimport tokenVestingAbi from \"./abis/TokenVesting.json\";\nimport fundsDistributorAbi from \"./abis/FundsDistributor.json\";\nimport fundsDistributorFactoryAbi from \"./abis/FundsDistributorFactory.json\";\nimport reservesAbi from \"./abis/Reserves.json\";\nimport vestedReservesAbi from \"./abis/VestedReserves.json\";\nimport multiSigWalletAbi from \"./abis/MultiSigWallet.json\";\n\nimport daiAbi from \"./abis/dai\";\nimport stakingAbi from \"./abis/Staking.json\";\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\nimport UniswapV2Router02Abi from \"./abis/UniswapV2Router02.json\";\n\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  epnsToken: epnsAbi,\n  tokenVesting: tokenVestingAbi,\n  fundsDistributor: fundsDistributorAbi,\n  fundsDistributorFactory: fundsDistributorFactoryAbi,\n  reserves: reservesAbi,\n  vestedReserves: vestedReservesAbi,\n  multiSigWallet: multiSigWalletAbi,\n  dai: daiAbi,\n  staking: stakingAbi,\n  yieldFarming: yieldFarmingAbi,\n  uniswapV2Router02: UniswapV2Router02Abi,\n};\n\nexport { default as addresses } from \"./addresses\";\nexport { default as bytecodes } from \"./bytecodes\";\n","import { addresses, abis, bytecodes } from \"@project/contracts\";\r\nconst ethers = require('ethers');\r\n\r\nexport function getFundsDistributor(library, account) {\r\n  var signer = library.getSigner(account);\r\n  let FundsDistributor = new ethers.ContractFactory(abis.fundsDistributor, bytecodes.fundsDistributor, signer);\r\n  return FundsDistributor;\r\n}\r\n\r\nexport function getTokenVesting(address, library, account) {\r\n  var signer = library.getSigner(account);\r\n  let TokenVesting = new ethers.Contract(address, abis.tokenVesting, signer);\r\n  return TokenVesting;\r\n}\r\n\r\nexport function getFundsDistributorFactory(address, library, account) {\r\n  var signer = library.getSigner(account);\r\n  let FundsDistributorFactory = new ethers.Contract(address, abis.fundsDistributorFactory, signer);\r\n  return FundsDistributorFactory;\r\n}\r\n\r\nexport function getVestedReserves(address, library, account) {\r\n  var signer = library.getSigner(account);\r\n  let CommUnlockedReserves = new ethers.Contract(address, abis.vestedReserves, signer);\r\n  return CommUnlockedReserves;\r\n}\r\n\r\nexport function getReserves(library, account) {\r\n  var signer = library.getSigner(account);\r\n  let CommUnlockedReserves = new ethers.Contract(addresses.commUnlockedReserves, abis.reserves, signer);\r\n  return CommUnlockedReserves;\r\n}\r\n\r\nexport function getEPNSToken(library, account) {\r\n  var signer = library.getSigner(account);\r\n  let SimpleToken = new ethers.Contract(addresses.epnsToken, abis.epnsToken, signer);\r\n  return SimpleToken;\r\n}\r\n\r\nexport function getMultisigWallet(address, library, account) {\r\n  var signer = library.getSigner(account);\r\n  let MultiSigWallet = new ethers.Contract(address, abis.multiSigWallet, signer);\r\n  return MultiSigWallet;\r\n}","import React from 'react'\r\n\r\nfunction ContractLink({ address }) {\r\n  const href = `https://etherscan.io/address/${address}`\r\n  return <a href={ href } target=\"_blank\">{ address }</a>\r\n}\r\n\r\nfunction TokenLink({ address, name }) {\r\n  const href = `https://etherscan.io/token/${address}`\r\n  return <a href={ href } target=\"_blank\">{ name }</a>\r\n}\r\n\r\nfunction TransactionLink( hash ) {\r\n  const href = `https://etherscan.io/tx/${hash}`\r\n  return href\r\n}\r\n\r\n\r\nexport { ContractLink, TokenLink, TransactionLink }","import React from \"react\";\r\nimport { ContractLink, TokenLink } from \"./Links\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Header = ({ address, token, tokenName }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"contracts\">\r\n        <HeaderStyle>Vesting address: <ContractLink address={address} /></HeaderStyle>\r\n        <span>\r\n          For <TokenLink address={token} name={tokenName} /> token\r\n        </span>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst HeaderStyle = styled.h3`\r\n  color: rgba(0, 0, 0, 0.5);\r\n  font-weight: 300;\r\n  font-size: 1rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-family: \"Source Sans Pro\", Helvetica, sans-serif;\r\n  text-align: inherit;\r\n}\r\n`;\r\n\r\nexport default Header;\r\n","import { ethers } from \"ethers\";\r\nimport { getFundsDistributorFactory } from \"contracts\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\nexport function displayAmount(amount, decimals) {\r\n  if(!amount){\r\n    return ethers.BigNumber.from(0).toString();\r\n  }\r\n  return amount.div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))).toString()\r\n}\r\n\r\nexport function tokensToBn(amount) {\r\n  return ethers.BigNumber.from(amount).mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18)))\r\n}\r\n\r\nexport function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms))\r\n}\r\n\r\nexport const queryVestingLink = async (library, account) => {\r\n    const factoryAddresses = Object.values(addresses.fundsDistributorFactory)\r\n\r\n    for(var i = 0; i < factoryAddresses.length; i++){\r\n      const fundsDistributorFactory = await getFundsDistributorFactory(factoryAddresses[i], library, account);\r\n      const DeployFundee = await fundsDistributorFactory.filters.DeployFundee(null, account, null)\r\n      const logs = await fundsDistributorFactory.queryFilter(DeployFundee, 0, \"latest\");\r\n      if(logs.length > 0){\r\n        return [logs[0].args[0]]\r\n      }\r\n    }\r\n      \r\n    return null\r\n}\r\n\r\nexport const queryVestingLinkMultiple = async (library, account) => {\r\n  const factoryAddresses = Object.values(addresses.fundsDistributorFactory)\r\n\r\n  for(var i = 0; i < factoryAddresses.length; i++){\r\n    const fundsDistributorFactory = await getFundsDistributorFactory(factoryAddresses[i], library, account);\r\n    const DeployFundee = await fundsDistributorFactory.filters.DeployFundee(null, account, null)\r\n    const logs = await fundsDistributorFactory.queryFilter(DeployFundee, 0, \"latest\");\r\n    if(logs.length > 1){\r\n      return [logs[0].args[0], logs[1].args[0]]\r\n    }\r\n  }\r\n    \r\n  return null\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nconst Emoji = ({ e }) => {\r\n  return (\r\n    <span className=\"emoji\" role=\"img\">\r\n      {e}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Emoji;\r\n","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { getTokenVesting } from '../contracts'\r\nimport { displayAmount } from '../utils'\r\n\r\nimport { ContractLink, TransactionLink } from './Links'\r\nimport Emoji from './Emoji'\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst VestingDetails = ({ address, token, details, getData, setLoader }) => {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n  const { start, cliff, end, total, released, vested, revocable, beneficiary } = details\r\n  const releasable = vested ? vested.sub(released) : null\r\n  \r\n  function formatDate(date) {\r\n    if (! date) return\r\n    const milliseconds = date * 1000\r\n    return moment(milliseconds).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\r\n  }\r\n\r\n  function formatTokens(amount) {\r\n    if (amount == null) return\r\n    const { decimals, symbol } = details\r\n    const display = displayAmount(amount, decimals)\r\n    return `${display} ${symbol}`\r\n  }\r\n\r\n  return (\r\n     <div className=\"details\">\r\n      <TitleLink>VESTING DETAILS</TitleLink>\r\n      <table>\r\n        <tbody>\r\n          <TableRow title=\"Beneficiary\">\r\n            <ContractLink address={ beneficiary } />\r\n          </TableRow>\r\n\r\n          <TableRow title=\"Start date\">\r\n            { formatDate(start) }\r\n          </TableRow>\r\n          \r\n          <TableRow title=\"Cliff\">\r\n            { formatDate(cliff) }\r\n          </TableRow>\r\n          \r\n          <TableRow title=\"End date\">\r\n            { formatDate(end) }\r\n          </TableRow>\r\n          \r\n          <TableRow title=\"Total vesting\">\r\n            { formatTokens(total) }\r\n          </TableRow>\r\n          \r\n          <TableRow title=\"Already vested\">\r\n            { formatTokens(vested) }\r\n          </TableRow>\r\n          \r\n          <TableRow title=\"Already released\">\r\n            { formatTokens(released) }\r\n          </TableRow>\r\n          \r\n          <TableRow title=\"Releasable\">\r\n              { formatTokens(releasable) }\r\n          </TableRow>\r\n          {/* <TableRow title=\"Revocable\">\r\n            <Revocable revocable={ revocable } canRevoke={ canRevoke } onRevoke={ () => onRevoke() } />\r\n          </TableRow> */}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n\r\n  \r\n}\r\n\r\n\r\nconst TableRow = ({ title, children }) => {\r\n  return (\r\n    <tr>\r\n      <th>{ title }</th>\r\n      <td>\r\n        { children }\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\n// const Revocable = ({ revocable, onRevoke, canRevoke }) => {\r\n//   if (! revocable) return <Emoji e=\"❌\" />\r\n\r\n//   return <span>\r\n//     <Emoji e=\"✅\" />\r\n//     { canRevoke ? <a className=\"action\" onClick={ onRevoke }>revoke</a> : null }\r\n//   </span>\r\n// }\r\n\r\n\r\n// const Releasable = ({ releasable, onRelease, children }) => {\r\n//   return <span>\r\n//     { children }\r\n//     { releasable > 0 ? <a className=\"action\" onClick={ onRelease }>release</a> : null }\r\n//   </span>\r\n// }\r\n\r\n\r\nconst Button = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  background: #e20880;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst TitleLink = styled.h4`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  text-align: center;\r\n`\r\n\r\nexport default VestingDetails","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\n\r\nimport { displayAmount } from \"../utils\";\r\nimport { ethers } from \"ethers\";\r\n\r\nconst VestingChart = ({ details }) => {\r\n  function chartData() {\r\n    return {\r\n      datasets: [\r\n        fromBaseDataset({\r\n          data: getPoints(),\r\n        }),\r\n      ],\r\n    };\r\n  }\r\n\r\n  function getPoints() {\r\n    const { start, cliff, end } = details;\r\n    const now = ethers.BigNumber.from(Math.floor(new Date() / 1000)); // normalize to seconds\r\n    const points = [];\r\n    points.push(getDataPointAt(start))\r\n    // Add signitificant datapoints. Order matters.\r\n    if (cliff.lt(now)) {\r\n      points.push(getDataPointAt(cliff));\r\n    }\r\n\r\n    if (start.lt(now) && now.lt(end)) {\r\n      points.push(getDataPointAt(now));\r\n    }\r\n\r\n    if (cliff.gt(now)) {\r\n      points.push(getDataPointAt(cliff));\r\n    }\r\n\r\n    points.push(getDataPointAt(end));\r\n\r\n    return points;\r\n  }\r\n\r\n  function getDataPointAt(date) {\r\n    return {\r\n      x: formatDate(date),\r\n      y: getAmountAt(date),\r\n    };\r\n  }\r\n\r\n  function formatDate(date) {\r\n    return moment(date * 1000).format(\"MM/DD/YYYY HH:mm\");\r\n  }\r\n\r\n  function getAmountAt(date) {\r\n    const { total, start, end, decimals } = details;\r\n    // const slope = date.sub(start).div(end.sub(start));\r\n    const slope = (date - start) / (end - start)\r\n\r\n    return (displayAmount(total, decimals) * slope).toFixed(4)\r\n      .toString();\r\n  }\r\n\r\n  function chartOptions() {\r\n    return {\r\n      legend: { display: false },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            type: \"time\",\r\n            time: {\r\n              format: \"MM/DD/YYYY HH:mm\",\r\n              tooltipFormat: \"ll HH:mm\",\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: \"Date\",\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: details.symbol || \"\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  function fromBaseDataset(opts) {\r\n    return {\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(92,182,228,0.4)\",\r\n      borderColor: \"rgba(92,182,228,1)\",\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(92,182,228,1)\",\r\n      pointBackgroundColor: \"rgba(92,182,228,1)\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(92,182,228,1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 5,\r\n      pointHitRadius: 10,\r\n      ...opts,\r\n    };\r\n  }\r\n\r\n  return <Line data={chartData()} options={chartOptions()} />;\r\n};\r\n\r\nexport default VestingChart;\r\n","import React from \"react\";\r\nimport VestingChart from \"./VestingChart\";\r\nimport Emoji from \"./Emoji\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst VestingSchedule = ({ details }) => {\r\n  return (\r\n    <div>\r\n      <TitleLink>VESTING SCHEDULE</TitleLink>\r\n      {!details.revoked ? (\r\n        details.total > 0 ? (\r\n          <VestingChart details={details} />\r\n        ) : (\r\n          <Empty />\r\n        )\r\n      ) : (\r\n        <Revoked />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Empty = () => {\r\n  return (\r\n    <div className=\"warning\">\r\n      <span className=\"warning-message\">\r\n        <Emoji e=\"⚠️\" /> No funds in the contract\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Revoked = () => {\r\n  return (\r\n    <div className=\"warning\">\r\n      <span className=\"warning-message\">\r\n        <Emoji e=\"⚠️\" /> Revoked\r\n      </span>\r\n      <VestingChart details={{}} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TitleLink = styled.h4`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  text-align: center;\r\n`\r\n\r\n\r\nexport default VestingSchedule;\r\n","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n// import { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.mapAddressChannels(channelID)\n        .then(response => {\n          console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      const ids = identity.split(\"+\"); // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getUserInfo(user, contract)\n        .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.memberExists(user, channel)\n        .then(response => {\n          console.log(\"getSubscribedStatus() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { ethers } from \"ethers\";\n// import { bigNumber } from \"ethers/utils\";\n\nimport { addresses, abis } from \"@project/contracts\";\n\nconst ONE_PUSH = ethers.BigNumber.from(1).mul(\n  ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n);\nconst GENESIS_EPOCH_AMOUNT_PUSH = 30000\nconst GENESIS_EPOCH_AMOUNT_LP = 35000\n\nconst bn = function(number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\n\nconst tokenToBn = (token) => {\n  return token.mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18)))\n}\n\nconst tokenBNtoNumber = (tokenBn) => {\n  return tokenBn.div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(10))).toNumber() / 100000000\n}\n\nconst bnToInt = function (bnAmount) { return parseInt(bnAmount.div(bn(10).pow(18))) }\n\nexport default class YieldFarmingDataStore {\n  static instance =\n    YieldFarmingDataStore.instance || new YieldFarmingDataStore();\n\n  state = {\n    account: null,\n    signer: null,\n    staking: null,\n    yieldFarmingPUSH: null,\n    yieldFarmingLP: null,\n    rewardForCurrentEpochPush: null,\n    rewardForCurrentEpochLP: null,\n\n    genesisEpochAmountPUSH: GENESIS_EPOCH_AMOUNT_PUSH,\n    deprecationPerEpochPUSH: 100,\n    genesisEpochAmountLP: GENESIS_EPOCH_AMOUNT_LP,\n    deprecationPerEpochLP: 100,\n  };\n\n  // init\n  init = (account, epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02) => {\n    // set account\n    this.state.account = account;\n    this.state.epnsToken = epnsToken;\n    this.state.staking = staking;\n    this.state.yieldFarmingPUSH = yieldFarmingPUSH;\n    this.state.yieldFarmingLP = yieldFarmingLP;\n    this.state.uniswapV2Router02 = uniswapV2Router02;\n  };\n\n  // 1. Listen for Subscribe Async\n  getPoolStats = () => {\n    return new Promise(async (resolve, reject) => {\n      const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\n      const yieldFarmingLP = this.state.yieldFarmingLP;\n\n      const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\n\n      const pushPriceAmounts = await this.state.uniswapV2Router02.getAmountsOut(ONE_PUSH.toString(), [addresses.epnsToken, addresses.WETHAddress, addresses.USDTAddress]);\n      const pushPrice = pushPriceAmounts[pushPriceAmounts.length -1].toNumber()/1000000;\n\n      const pushAmountReserve = tokenBNtoNumber(await this.state.epnsToken.balanceOf(addresses.epnsLPToken))\n      const wethAmountReserve = tokenBNtoNumber(await this.state.epnsToken.attach(addresses.WETHAddress).balanceOf(addresses.epnsLPToken)) // Using epnsToken instance for WETH instance\n\n      const ethPriceAmounts = await this.state.uniswapV2Router02.getAmountsOut(ONE_PUSH.toString(), [addresses.WETHAddress, addresses.USDTAddress]);\n      const ethPrice = ethPriceAmounts[ethPriceAmounts.length -1].toNumber()/1000000;\n\n      const uniTotalSupply = tokenBNtoNumber(await this.state.epnsToken.attach(addresses.epnsLPToken).totalSupply()) // Using epnsToken instance for Uni-V2 instance\n\n      const uniLpPrice = ((pushAmountReserve * pushPrice) + (wethAmountReserve * ethPrice)) / uniTotalSupply\n      const lpToPushRatio = uniLpPrice / pushPrice\n\n      const pushNextPoolSize = tokenBNtoNumber(await yieldFarmingPUSH.getPoolSize(currentEpochPUSH.add(1)));\n      const lpNextPoolSize = tokenBNtoNumber(await yieldFarmingLP.getPoolSize(currentEpochPUSH.add(1)));\n\n      const totalValueLocked = (pushNextPoolSize * pushPrice) + (lpNextPoolSize * uniLpPrice)\n\n      const epochDuration = await yieldFarmingPUSH.epochDuration();\n\n      const epochStart = await yieldFarmingPUSH.epochStart();\n\n      const start = epochStart.add(currentEpochPUSH.sub(1).mul(epochDuration));\n      const epochEndTimestamp = start.add(epochDuration);\n\n      const pushTotalDistributedAmount = await yieldFarmingPUSH.TOTAL_DISTRIBUTED_AMOUNT();\n      const lpTotalDistributedAmount = await yieldFarmingLP.TOTAL_DISTRIBUTED_AMOUNT();\n\n      const totalDistributedAmount = pushTotalDistributedAmount.add(\n        lpTotalDistributedAmount\n      );\n\n      const pushRewardsDistributed = await this.getPushRewardsDistributed();\n\n      resolve({\n        totalValueLocked,\n        pushPrice,\n        epochEndTimestamp,\n        totalDistributedAmount,\n        pushRewardsDistributed,\n        currentEpoch: currentEpochPUSH,\n        lpToPushRatio\n      });\n    });\n  };\n\n  // 1. Listen for Subscribe Async\n  getPUSHPoolStats = async () => {\n    return new Promise(async (resolve, reject) => {\n      const epnsToken = this.state.epnsToken;\n      const staking = this.state.staking;\n      const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\n\n      const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\n      const totalEpochPUSH = (await yieldFarmingPUSH.NR_OF_EPOCHS()).toString();\n\n      const genesisEpochAmount = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountPUSH));\n      const deprecationPerEpoch = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochPUSH));\n\n      const rewardForCurrentEpoch = this.calcTotalAmountPerEpoch(\n        genesisEpochAmount,\n        currentEpochPUSH,\n        deprecationPerEpoch\n      );\n\n      this.state.rewardForCurrentEpochPush = rewardForCurrentEpoch;\n\n      const poolBalance = await yieldFarmingPUSH.getPoolSize(\n        currentEpochPUSH.add(1)\n      );\n\n      const stakingAPR = this.calcStakingAPR(\n        genesisEpochAmount,\n        currentEpochPUSH,\n        deprecationPerEpoch,\n        poolBalance,\n      );\n\n      resolve({\n        currentEpochPUSH,\n        totalEpochPUSH,\n        rewardForCurrentEpoch,\n        poolBalance,\n        stakingAPR\n      });\n    });\n  };\n\n  getLPPoolStats = async (poolStats) => {\n    return new Promise(async (resolve, reject) => {\n      const epnsToken = this.state.epnsToken;\n      const staking = this.state.staking;\n      const yieldFarmingLP = this.state.yieldFarmingLP;\n\n      const currentEpochPUSH = await yieldFarmingLP.getCurrentEpoch();\n      const totalEpochPUSH = (await yieldFarmingLP.NR_OF_EPOCHS()).toString();\n      const genesisEpochAmount = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountLP));\n      const deprecationPerEpoch = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochLP));\n\n      const rewardForCurrentEpoch = this.calcTotalAmountPerEpoch(\n        genesisEpochAmount,\n        currentEpochPUSH,\n        deprecationPerEpoch\n      );\n\n      this.state.rewardForCurrentEpochLP = rewardForCurrentEpoch;\n\n      const poolBalance = await yieldFarmingLP.getPoolSize(\n        currentEpochPUSH.add(1)\n      );\n\n      const stakingAPR = await this.calcLPPoolAPR(\n        genesisEpochAmount,\n        currentEpochPUSH,\n        deprecationPerEpoch,\n        poolBalance,\n        poolStats\n      );\n\n      resolve({\n        currentEpochPUSH,\n        totalEpochPUSH,\n        rewardForCurrentEpoch,\n        poolBalance,\n        stakingAPR\n      });\n    });\n  };\n\n  // 1. Listen for Subscribe Async\n  getUserData = async (contract) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.account) {\n        const currentEpochPUSH = await contract.getCurrentEpoch();\n\n        const potentialUserReward = (await this.calculateUserEpochReward(currentEpochPUSH, contract)).toFixed(2)\n\n        const epochStakeNext = await contract.getEpochStake(\n          this.state.account,\n          currentEpochPUSH.add(1)\n        );\n\n        let totalAccumulatedReward = 0\n\n        for(var i=0; i<=currentEpochPUSH.sub(1).toNumber(); i++){\n          const epochReward = await this.calculateUserEpochReward(i, contract)\n          totalAccumulatedReward = totalAccumulatedReward + epochReward\n        }\n\n        totalAccumulatedReward = totalAccumulatedReward.toFixed(2)\n        const lastEpochIdHarvested = (await contract.lastEpochIdHarvested(this.state.account)).toNumber()\n\n        let totalAvailableReward = 0\n\n        for(var i = lastEpochIdHarvested + 1; i<=currentEpochPUSH.sub(1).toNumber(); i++){\n          const epochReward = await this.calculateUserEpochReward(i, contract)\n          totalAvailableReward = totalAvailableReward + epochReward\n        }\n        totalAvailableReward = totalAvailableReward.toFixed(2)\n\n        resolve({\n          potentialUserReward,\n          epochStakeNext,\n          totalAccumulatedReward,\n          totalAvailableReward\n        });\n      }\n    });\n  };\n\n  getPushRewardsDistributed = async () => {\n    const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\n    const yieldFarmingLP = this.state.yieldFarmingLP;\n\n    const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\n    const genesisEpochAmountPUSH = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountPUSH))\n    const deprecationPerEpochPUSH = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochPUSH))\n    const currentEpochLP = await yieldFarmingLP.getCurrentEpoch();\n    const genesisEpochAmountLP = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountLP))\n    const deprecationPerEpochLP = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochLP))\n\n    let pushPoolRewardsDistributed = ethers.BigNumber.from(0);\n    let lpPoolRewardsDistributed = ethers.BigNumber.from(0);\n\n    for(var i=0; i<currentEpochLP.toNumber(); i++){\n      const rewardForCurrentEpochLP = this.calcTotalAmountPerEpoch(\n        genesisEpochAmountLP,\n        ethers.BigNumber.from(i),\n        deprecationPerEpochLP\n      );\n\n      lpPoolRewardsDistributed = lpPoolRewardsDistributed.add(rewardForCurrentEpochLP);\n\n      const rewardForCurrentEpochPUSH = this.calcTotalAmountPerEpoch(\n        genesisEpochAmountPUSH,\n        ethers.BigNumber.from(i),\n        deprecationPerEpochPUSH\n      );\n\n      pushPoolRewardsDistributed = pushPoolRewardsDistributed.add(rewardForCurrentEpochPUSH);\n    }\n\n    return pushPoolRewardsDistributed.add(lpPoolRewardsDistributed)\n  }\n\n  calcTotalAmountPerEpoch = (\n    genesisEpochAmount,\n    epochId,\n    deprecationPerEpoch\n  ) => {\n    return genesisEpochAmount.sub(epochId.mul(deprecationPerEpoch));\n  };\n\n  calcAnnualEpochReward = (\n    genesisEpochAmount,\n    epochId,\n    deprecationPerEpoch\n  ) => {\n    // get current epoch reward\n    const currentEpochReward = this.calcTotalAmountPerEpoch(genesisEpochAmount, epochId, deprecationPerEpoch)\n\n    const weeks = 52\n    const depreciate = deprecationPerEpoch.mul(weeks * (weeks - 1)).div(2)\n\n    const annualEpochReward = (currentEpochReward.mul(weeks)).sub(depreciate)\n\n    return annualEpochReward\n  }\n\n  calcStakingAPR = (\n    genesisEpochAmount,\n    epochId,\n    deprecationPerEpoch,\n    totalStaked\n  ) => {\n    // get annual rewards\n    const annualRewards = this.calcAnnualEpochReward(genesisEpochAmount, epochId, deprecationPerEpoch)\n\n    const apr = annualRewards.mul(1000000).div(totalStaked)\n    const aprFormatted = (parseInt(apr.toString())/10000).toFixed(2)\n\n    return aprFormatted\n  }\n\n  calcLPPoolAPR = async (\n    genesisEpochAmount,\n    epochId,\n    deprecationPerEpoch,\n    totalStaked,\n    poolStats\n  ) => {\n    // get annual rewards\n    const annualRewards = this.calcAnnualEpochReward(genesisEpochAmount, epochId, deprecationPerEpoch)\n\n    const apr = annualRewards.mul(1000000).div(totalStaked)\n    const aprFormatted = (parseInt(apr.toString())/(10000 * poolStats.lpToPushRatio)).toFixed(2)\n\n    // console.log(annualRewards.toString(), genesisEpochAmount.toString())\n    // if (poolStats) {\n    //   console.log(poolStats.totalValueLocked)\n    //   console.log(poolStats[\"lpToPushRatio\"])\n    // }\n\n    return aprFormatted\n\n  }\n\n  calculateUserEpochReward = async (\n    epochId,\n    contract\n  ) => {\n      const epochStake = tokenBNtoNumber(await contract.getEpochStake(\n        this.state.account,\n        epochId\n      ));\n\n      const poolSize = tokenBNtoNumber(await contract.getPoolSize(epochId));\n\n      let potentialUserReward = 0;\n      if (poolSize > 0) {\n        if (contract.address == addresses.yieldFarmLP) {\n          const rewardForCurrentEpoch = tokenBNtoNumber(this.state.rewardForCurrentEpochLP)\n          potentialUserReward = epochStake / poolSize * rewardForCurrentEpoch\n        }\n        else {\n          const rewardForCurrentEpoch = tokenBNtoNumber(this.state.rewardForCurrentEpochPush)\n          potentialUserReward = epochStake / poolSize * rewardForCurrentEpoch\n        }\n\n      }\n\n      return potentialUserReward\n  }\n}\n","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { Section, Content, Item, ItemH, Span, B } from 'components/SharedStyling';\r\n\r\nimport { getTokenVesting } from '../contracts'\r\nimport { displayAmount, tokensToBn } from '../utils'\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { ContractLink, TransactionLink } from './Links'\r\nimport Emoji from './Emoji'\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from \"ethers\";\r\n\r\nimport YieldFarmingDataStore from \"singletons/YieldFarmingDataStore\";\r\n\r\n\r\nconst VestingActions = ({ multisigContract, address, token, details, getData, setLoader, loaderTheme, loadAPR, actionable }) => {\r\n  const [ canRevoke, setRevoke ] = React.useState(true);\r\n  const [ recipientAddress, setRecipientAddress ] = React.useState(\"\");\r\n  const [ transferAmount, setTransferAmount ] = React.useState(0);\r\n  const [ newBeneficiary, setNewBeneficiary ] = React.useState(\"\");\r\n  const [ loading, setLoading ] = React.useState(true);\r\n\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [poolStats, setPoolStats] = React.useState(null);\r\n  const [pushPoolStats, setPushPoolStats] = React.useState(null);\r\n  const [lpPoolStats, setLpPoolStats] = React.useState(null);\r\n  const [userDataPUSH, setUserDataPUSH] = React.useState(null);\r\n  const [userDataLP, setUserDataLP] = React.useState(null);\r\n\r\n  const [formattedDuration, setFormattedDuration] = React.useState(\"\");\r\n\r\n  const [epnsToken, setEpnsToken] = React.useState(null);\r\n  const [staking, setStaking] = React.useState(null);\r\n  const [yieldFarmingPUSH, setYieldFarmingPUSH] = React.useState(null);\r\n  const [yieldFarmingLP, setYieldFarmingLP] = React.useState(null);\r\n  const [uniswapV2Router02, setUniswapV2Router02] = React.useState(null);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n\r\n  const [loadingUserData, setLoadingUserData] = React.useState(false);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  const getPoolStats = React.useCallback(async () => {\r\n    const poolStats = await YieldFarmingDataStore.instance.getPoolStats();\r\n\r\n    setPoolStats({ ...poolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getPUSHPoolStats = React.useCallback(async () => {\r\n    const pushPoolStats = await YieldFarmingDataStore.instance.getPUSHPoolStats();\r\n\r\n    setPushPoolStats({ ...pushPoolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getLPPoolStats = React.useCallback(async (poolStats) => {\r\n    const lpPoolStats = await YieldFarmingDataStore.instance.getLPPoolStats(poolStats);\r\n\r\n    setLpPoolStats({ ...lpPoolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getUserDataPUSH = React.useCallback(async () => {\r\n    const userDataPUSH = await YieldFarmingDataStore.instance.getUserData(yieldFarmingPUSH);\r\n\r\n    setUserDataPUSH({ ...userDataPUSH });\r\n  }, [yieldFarmingPUSH]);\r\n\r\n  const getUserDataLP = React.useCallback(async () => {\r\n    const userDataLP = await YieldFarmingDataStore.instance.getUserData(yieldFarmingLP);\r\n\r\n    setUserDataLP({ ...userDataLP });\r\n  }, [yieldFarmingLP]);\r\n\r\n  const formatTokens = (tokens) => {\r\n    if (tokens) {\r\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\r\n    }\r\n  };\r\n\r\n  const getFormattedDuration = () => {\r\n    if (poolStats?.epochEndTimestamp) {\r\n      const epochEndTimestamp = poolStats.epochEndTimestamp.toNumber();\r\n\r\n      const duration = epochEndTimestamp - Math.floor(new Date() / 1000);\r\n\r\n      if(duration < 0) {\r\n        getPoolStats()\r\n      }\r\n\r\n      const day = parseInt(duration / 86400);\r\n      const hour = parseInt((duration - day * 86400) / 3600);\r\n\r\n      const minutes = parseInt((duration - (day * 86400 + hour * 3600)) / 60);\r\n      const seconds = duration - (day * 86400 + hour * 3600 + minutes * 60);\r\n\r\n      setFormattedDuration(`${day}D ${hour}H ${minutes}M ${seconds}S`);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!loadAPR) {\r\n      return;\r\n    }\r\n\r\n    let epnsToken = new ethers.Contract(\r\n      addresses.epnsToken,\r\n      abis.epnsToken,\r\n      library\r\n    );\r\n\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, library);\r\n    let yieldFarmingPUSH = new ethers.Contract(\r\n      addresses.yieldFarmPUSH,\r\n      abis.yieldFarming,\r\n      library\r\n    );\r\n\r\n    let yieldFarmingLP = new ethers.Contract(\r\n      addresses.yieldFarmLP,\r\n      abis.yieldFarming,\r\n      library\r\n    );\r\n\r\n    let uniswapV2Router02Instance = new ethers.Contract(\r\n      addresses.uniswapV2Router02,\r\n      abis.uniswapV2Router02,\r\n      library\r\n    );\r\n\r\n    setEpnsToken(epnsToken);\r\n    setStaking(staking);\r\n    setYieldFarmingPUSH(yieldFarmingPUSH);\r\n    setYieldFarmingLP(yieldFarmingLP);\r\n    setUniswapV2Router02(uniswapV2Router02Instance)\r\n\r\n    if (!!(library && account)) {\r\n      var signer = library.getSigner(account);\r\n\r\n      let epnsToken = new ethers.Contract(\r\n        addresses.epnsToken,\r\n        abis.epnsToken,\r\n        signer\r\n      );\r\n      let staking = new ethers.Contract(\r\n        addresses.staking,\r\n        abis.staking,\r\n        signer\r\n      );\r\n      let yieldFarmingPUSH = new ethers.Contract(\r\n        addresses.yieldFarmPUSH,\r\n        abis.yieldFarming,\r\n        signer\r\n      );\r\n      let yieldFarmingLP = new ethers.Contract(\r\n        addresses.yieldFarmLP,\r\n        abis.yieldFarming,\r\n        signer\r\n      );\r\n\r\n      let uniswapV2Router02Instance = new ethers.Contract(\r\n        addresses.uniswapV2Router02,\r\n        abis.uniswapV2Router02,\r\n        signer\r\n      );\r\n\r\n      setEpnsToken(epnsToken);\r\n      setStaking(staking);\r\n      setYieldFarmingPUSH(yieldFarmingPUSH);\r\n      setYieldFarmingLP(yieldFarmingLP);\r\n      setUniswapV2Router02(uniswapV2Router02Instance);\r\n  }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if (!loadAPR) {\r\n      return;\r\n    }\r\n\r\n    if (epnsToken != null && staking != null && yieldFarmingPUSH != null) {\r\n      // Instantiate Data Stores\r\n      YieldFarmingDataStore.instance.init(\r\n        account,\r\n        epnsToken,\r\n        staking,\r\n        yieldFarmingPUSH,\r\n        yieldFarmingLP,\r\n        uniswapV2Router02\r\n      );\r\n\r\n      getPoolStats();\r\n\r\n      // setpoolStats(YieldFarmingDataStore.instance.state);\r\n    }\r\n  }, [getPoolStats]);\r\n\r\n  React.useEffect(() => {\r\n    if (!loadAPR) {\r\n      return;\r\n    }\r\n\r\n    if (poolStats) {\r\n      syncData(poolStats)\r\n    }\r\n\r\n  }, [poolStats]);\r\n\r\n  const syncData = async (poolStats) => {\r\n    if (!loadAPR) {\r\n      return;\r\n    }\r\n    \r\n    getPUSHPoolStats();\r\n    getLPPoolStats(poolStats);\r\n\r\n    getUserDataPUSH();\r\n    getUserDataLP();\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (loadAPR) {\r\n      // don't turn loading off till this is loaded\r\n\r\n    }\r\n    else {\r\n      setLoading(false)\r\n    }\r\n\r\n  }, [loadAPR]);\r\n\r\n  function startLoader() {\r\n    setLoader(true)\r\n  }\r\n\r\n  function stopLoader() {\r\n    setLoader(false)\r\n  }\r\n\r\n  async function onRelease() {\r\n    try {\r\n      const tokenVesting = getTokenVesting(address, library, account);\r\n      startLoader()\r\n      let tx;\r\n      if(multisigContract){\r\n        const data = (await tokenVesting.populateTransaction.release(token)).data\r\n        tx = await multisigContract.submitTransaction(tokenVesting.address, 0, data);\r\n      } else {\r\n        tx = await tokenVesting.release(token)\r\n      }\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      getData()\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onReleaseBeneficiary() {\r\n    try {\r\n      const tokenVesting = getTokenVesting(address, library, account);\r\n      startLoader()\r\n      let tx;\r\n      if(recipientAddress == \"\" || transferAmount <= 0 ){\r\n        toast.dark(\"Invalid Values. Please enter correct address or amount\", {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        return\r\n      }\r\n      if(multisigContract){\r\n        const data = (await tokenVesting.populateTransaction.releaseToAddress(token, recipientAddress, tokensToBn(transferAmount))).data\r\n        tx = await multisigContract.submitTransaction(tokenVesting.address, 0, data);\r\n      } else {\r\n        tx = await tokenVesting.releaseToAddress(token, recipientAddress, tokensToBn(transferAmount))\r\n      }\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setRecipientAddress(\"\")\r\n      setTransferAmount(0)\r\n      getData()\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onChangeBeneficiary() {\r\n    try {\r\n      const tokenVesting = getTokenVesting(address, library, account);\r\n      startLoader()\r\n      if(newBeneficiary == \"\"){\r\n        toast.dark(\"Invalid Values. Please enter correct address or amount\", {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        return\r\n      }\r\n      let tx;\r\n      if(multisigContract){\r\n        const data = (await tokenVesting.populateTransaction.setBeneficiary(newBeneficiary)).data\r\n        tx = await multisigContract.submitTransaction(tokenVesting.address, 0, data);\r\n      } else {\r\n        tx = await tokenVesting.setBeneficiary(newBeneficiary)\r\n      }\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      getData()\r\n      setNewBeneficiary(\"\")\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  return (\r\n     <Section>\r\n       <Content padding=\"0px\">\r\n         <Item self=\"stretch\" align=\"center\">\r\n           {loading ?\r\n             <Loader type=\"Oval\" color={loaderTheme ? loaderTheme : \"#e20880\"} height={40} width={40} />\r\n             : null\r\n           }\r\n           {!loading ?\r\n             <>\r\n               {/* {poolStats &&\r\n                 <Item self=\"stretch\" align=\"stretch\">\r\n                   <Content theme=\"#f3f3f3\" padding=\"40px 0px 0px 0px\">\r\n                     <ItemH margin=\"0px 15px 0px 15px\" align=\"stretch\">\r\n                       <StatsCard\r\n                         bg=\"#fff\"\r\n                       >\r\n                         <StatsHeading bg=\"#e20880\">Current Uniswap V2 LP APR</StatsHeading>\r\n                         {lpPoolStats &&\r\n                           <StatsContent>\r\n                             <StatsInnerTitle>{lpPoolStats.stakingAPR}%</StatsInnerTitle>\r\n                             <StatsInnerSub>Epoch {lpPoolStats.currentEpochPUSH.toString()} of {lpPoolStats.totalEpochPUSH}</StatsInnerSub>\r\n                           </StatsContent>\r\n                         }\r\n                         <StatsPreview color=\"#e20880\">Uni-V2 LP APR</StatsPreview>\r\n                       </StatsCard>\r\n\r\n                       <StatsCard\r\n                         bg=\"#fff\"\r\n                       >\r\n                         <StatsHeading bg=\"#35c5f3\">Current Staking APR</StatsHeading>\r\n                         {pushPoolStats &&\r\n                           <StatsContent>\r\n                             <StatsInnerTitle>{pushPoolStats.stakingAPR}%</StatsInnerTitle>\r\n                             <StatsInnerSub>Epoch {pushPoolStats.currentEpochPUSH.toString()} of {pushPoolStats.totalEpochPUSH}</StatsInnerSub>\r\n                           </StatsContent>\r\n                         }\r\n                         <StatsPreview color=\"#35c5f3\">Push Staking APR</StatsPreview>\r\n                       </StatsCard>\r\n                    </ItemH>\r\n\r\n                    <FullButton onClick={() => {actionable()}}>Stake Now!</FullButton>\r\n                  </Content>\r\n                 </Item>\r\n               } */}\r\n\r\n               <Item self=\"stretch\" align=\"stretch\" padding=\"20px 40px 10px 40px\">\r\n                 <Action>\r\n                   <Label>Release to Beneficiary Address</Label>\r\n                   <Button onClick={onRelease}>Release</Button>\r\n                 </Action>\r\n                 <Action>\r\n                   <Label>Release to Beneficiary Address</Label>\r\n                   <Input placeholder=\"Recipient Address\" onChange={(e) => setRecipientAddress(e.target.value)} />\r\n                   <Input placeholder=\"Amount to Transfer\" onChange={(e) => setTransferAmount(e.target.value)} />\r\n                   <Button onClick={onReleaseBeneficiary}>Submit</Button>\r\n                 </Action>\r\n                 <Action>\r\n                   <Label>Change Beneficiary Address</Label>\r\n                   <Input placeholder=\"New Beneficiary Address\" onChange={(e) => setNewBeneficiary(e.target.value)} />\r\n                   <Button onClick={onChangeBeneficiary}>Submit</Button>\r\n                 </Action>\r\n               </Item>\r\n             </>\r\n             : null\r\n           }\r\n       </Item>\r\n     </Content>\r\n    </Section>\r\n  )\r\n}\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #eee;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  flex: 1;\r\n  align-self: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 0px;\r\n  outline: 0px;\r\n  border-bottom: 1px solid #ddd;\r\n  margin: 25px 10px;\r\n  padding: 5px;\r\n  flex: 1;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  height: 35px;\r\n  align-self: center;\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  background: #e20880;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst FullButton = styled(Button)`\r\n  margin: 0px;\r\n  width: auto;\r\n  flex: 1;\r\n  align-self: auto;\r\n  border-radius: 0px;\r\n  background: #000000;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-size: 16px;\r\n  margin-top: 40px;\r\n`\r\n\r\nconst TitleLink = styled.h4`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  text-align: center;\r\n`;\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`\r\n\r\nconst StatsCard = styled(Item)`\r\n  overflow: hidden;\r\n  min-width: 180px;\r\n\r\n  border-radius: 12px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 0px 15px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst CenterHeading = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nconst PoolContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst StatsHeading = styled(Item)`\r\n  flex: 0;\r\n  align-self: stretch;\r\n  color: #fff;\r\n  top: 0px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  padding: 10px 5px;\r\n  right: 0;\r\n  left: 0;\r\n`\r\n\r\nconst StatsContent = styled(Item)`\r\n  padding: 20px 20px;\r\n`\r\n\r\nconst StatsPreview = styled(Span)`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 10px;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  opacity: 0.25;\r\n  letter-spacing:0.1em;\r\n  text-transform: uppercase;\r\n  color: ${props => props.color || '#000'};\r\n  z-index: -1;\r\n`\r\n\r\nconst StatsInnerTitle = styled.span`\r\n  font-weight: bold;\r\n  font-size: 22px;\r\n  letter-spacing: 0.1em;\r\n`;\r\n\r\nconst StatsInnerSub = styled.span`\r\n  font-size: 12px;\r\n  color: #999;\r\n  font-weight: 600;\r\n  align-self: flex-end;\r\n`;\r\n\r\nexport default VestingActions\r\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Section, Content, Item, ItemH } from 'components/SharedStyling';\n\nimport { getTokenVesting, getEPNSToken, getMultisigWallet } from \"../contracts\";\n\nimport Header from \"./Header\";\nimport VestingDetails from \"./VestingDetails\";\nimport VestingSchedule from \"./VestingSchedule\";\nimport VestingActions from \"./VestingActions\";\n\nimport Loader from \"react-loader-spinner\";\n\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { queryVestingLink, queryVestingLinkMultiple } from \"../utils\";\nimport { toast } from 'react-toastify';\n\nconst TokenVestingApp = ({ multipleVesting, vestingAddresses, loaderTheme, loadAPR, actionable }) => {\n  const [ details, setDetails ] = useState(null);\n  const [ isSearchingVesting, setIsSearchingVesting ] = React.useState(true)\n  const [ loading, setLoader ] = useState(true);\n  const { active, error, account, library, chainId } = useWeb3React();\n  const [ vestingAddress, setVestingAddress ] = React.useState(vestingAddresses);\n  const [ vesting1, setVesting1 ] = React.useState(true);\n  const [ vesting2, setVesting2 ] = React.useState(false);\n  const [ manualVestingAddress, setManualVestingAddress ] = React.useState('');\n  const [ manualBeneficiaryAddress, setManualBeneficiaryAddress ] = React.useState('');\n  const [ multisigAddress, setMultisigAddress ] = React.useState(\"\");\n  const [ multisigContract, setMultisigContract ] = React.useState(null);\n\n  const getVestingLink = useCallback(async () => {\n    if(!vestingAddresses){\n      try {\n        setIsSearchingVesting(true)\n        setLoader(true)\n        if(!multipleVesting){\n          const vestingContractAddress = await queryVestingLink(library, account)\n          setVestingAddress(vestingContractAddress);\n        } else {\n          const vestingContractAddresses = await queryVestingLinkMultiple(library, account)\n          setVestingAddress(vestingContractAddresses);\n        }\n        setLoader(false)\n        setIsSearchingVesting(false)\n      } catch (error) {\n        toast.dark('Some error occured, please try again later', {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  }, [account])\n\n  const getVestingLinkFromAddress = async () => {\n    try {\n      setIsSearchingVesting(true)\n      setLoader(true)\n      if(!multipleVesting){\n        const vestingContractAddress = await queryVestingLink(library, manualBeneficiaryAddress)\n        setVestingAddress(vestingContractAddress);\n      } else {\n        const vestingContractAddresses = await queryVestingLinkMultiple(library, manualBeneficiaryAddress)\n        setVestingAddress(vestingContractAddresses);\n      }\n      setLoader(false)\n      setIsSearchingVesting(false)\n    } catch (error) {\n      toast.dark('Some error occured, please try again later', {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n  const getData = useCallback(async () => {\n    try {\n      if(vestingAddress){\n        setLoader(true)\n        let tokenVesting, tokenContract;\n        let start, end, cliff, total, released, vested, decimals, beneficiary, owner, revocable, revoked, name, symbol, duration, balance;\n        let details = [];\n\n        for(var i = 0; i<vestingAddress.length; i++){\n          tokenVesting = getTokenVesting(vestingAddress[i], library, account);\n          tokenContract = getEPNSToken(library, account);\n\n          start = await tokenVesting.start();\n          duration = await tokenVesting.duration();\n          end = start.add(duration);\n          balance = await tokenContract.balanceOf(vestingAddress[i]);\n          released = await tokenVesting.released(addresses.epnsToken);\n          total = balance.add(released);\n\n          cliff = await tokenVesting.cliff();\n          decimals = await tokenContract.decimals();\n          beneficiary = await tokenVesting.beneficiary();\n          owner = await tokenVesting.owner();\n          revocable = await tokenVesting.revocable();\n          revoked = await tokenVesting.revoked(addresses.epnsToken);\n          name = await tokenContract.name();\n\n          symbol = await tokenContract.symbol();\n          vested = await tokenVesting.vestedAmount(addresses.epnsToken);\n\n          details.push(\n            {\n              start,\n              end,\n              cliff,\n              total,\n              released,\n              vested,\n              decimals,\n              beneficiary,\n              owner,\n              revocable,\n              revoked,\n              name,\n              symbol,\n              loading: false,\n            }\n          )\n\n        }\n\n        setDetails(details)\n        setLoader(false);\n      } else {\n        setLoader(false)\n        setDetails(null)\n      }\n    } catch (e) {\n      toast.dark(\"Something went wrong\", {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      setLoader(false);\n    }\n  }, [vestingAddress]);\n\n  async function setMultisigInstance() {\n    try {\n      setLoader(true);\n      if(multisigAddress == \"\" || multisigAddress.length < 42){\n        toast.dark(\"Invalid Values. Please enter correct multisig address\", {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        return\n      }\n      const multisigContract = await getMultisigWallet(multisigAddress, library, account);\n      setMultisigContract(multisigContract);\n      toast.dark(\"Multisig Account Set\", {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      setLoader(false);\n    } catch (e) {\n      toast.dark(e.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      setLoader(false);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n\n  useEffect(() => {\n    getVestingLink();\n  }, [getVestingLink])\n\n  return (\n    <Section>\n      <Content>\n        <Item>\n          {loading ?\n            <Loader type=\"Oval\" color={loaderTheme ? loaderTheme : \"#e20880\"} height={40} width={40} /> :\n            null\n          }\n          {\n            !isSearchingVesting && vestingAddress == null ? (\n              <Item self=\"stretch\" align=\"stretch\" padding=\"10px 40px\">\n                <center>\n                  <h4>No Vesting Contract found for this address</h4>\n                  <h2>OR</h2>\n                </center>\n                <Action>\n                  <Label>Enter Beneficiary Address Manually</Label>\n                  <Input placeholder=\"Beneficiary Address\" onChange={(e) => setManualBeneficiaryAddress(e.target.value)} />\n                  <Button onClick={() => getVestingLinkFromAddress()}>Submit</Button>\n                </Action>\n                <center>\n                  <h2>OR</h2>\n                </center>\n                <Action>\n                  <Label>Enter Vesting Address Manually</Label>\n                  <Input placeholder=\"Vesting Address\" onChange={(e) => {setManualVestingAddress(e.target.value)}} />\n                  <Button onClick={() => setVestingAddress([manualVestingAddress])}>Submit</Button>\n                </Action>\n              </Item>\n            ) : null\n          }\n          {details &&\n            <Item self=\"stretch\" align=\"stretch\" padding=\"10px 0px\">\n              <Item self=\"stretch\" align=\"stretch\" padding=\"10px 25px\">\n                <Action>\n                  <Label>Set Multisig Address (If POA)</Label>\n                  <Input placeholder=\"Enter Multisig Address\" onChange={(e) => setMultisigAddress(e.target.value)} />\n                  <Button onClick={setMultisigInstance}>Set Address</Button>\n                </Action>\n\n                {multisigContract &&\n                  <>\n                    <center><CardTitle>Multisig Address Set - </CardTitle><span>{multisigContract.address}</span></center>\n                  </>\n                }\n              </Item>\n\n              <Item self=\"stretch\" align=\"stretch\" padding=\"10px 25px\">\n                {multipleVesting &&\n                  <ItemH self=\"flex-start\">\n                    <Input type=\"radio\" id=\"vesting1\" checked={vesting1} onChange={() => {\n                      setVesting1(true)\n                      setVesting2(false)\n                    }} />\n                    <label for=\"vesting1\">Vesting 1</label>\n                    <Input type=\"radio\" id=\"vesting2\" checked={vesting2} onChange={() => {\n                      setVesting1(false)\n                      setVesting2(true)\n                    }}  />\n                    <label for=\"vesting2\">Vesting 2</label>\n                  </ItemH>\n                }\n\n                {multipleVesting && vesting1 && vestingAddress.length > 0 &&\n                  <>\n                    <Header address={vestingAddress[0]} token={addresses.epnsToken} tokenName={\"$PUSH\"} />\n                    <VestingDetails\n                      address={vestingAddress[0]}\n                      token={addresses.epnsToken}\n                      details={details[0]}\n                      getData={getData}\n                      setLoader={setLoader}\n                    />\n                    <VestingSchedule details={details[0]} />\n                  </>\n                }\n\n                {multipleVesting && vesting2 && vestingAddress.length > 0 &&\n                  <>\n                    <Header address={vestingAddress[1]} token={addresses.epnsToken} tokenName={\"$PUSH\"} />\n                    <VestingDetails\n                      address={vestingAddress[1]}\n                      token={addresses.epnsToken}\n                      details={details[1]}\n                      getData={getData}\n                      setLoader={setLoader}\n                    />\n                    <VestingSchedule details={details[1]} />\n                  </>\n                }\n\n                {!multipleVesting &&\n                  <>\n                    <Header address={vestingAddress[0]} token={addresses.epnsToken} tokenName={\"$PUSH\"} />\n                    <VestingDetails\n                      address={vestingAddress[0]}\n                      token={addresses.epnsToken}\n                      details={details[0]}\n                      getData={getData}\n                      setLoader={setLoader}\n                    />\n                    <VestingSchedule details={details[0]} />\n                  </>\n                }\n              </Item>\n\n              <Item self=\"stretch\" align=\"stretch\" padding=\"10px 0px\">\n                {multipleVesting &&\n                  <>\n                  {vesting1 && vestingAddress.length > 0 &&\n                    <VestingActions multisigContract={multisigContract} address={vestingAddress[0]} token={addresses.epnsToken} setLoader={setLoader} getData={getData} loaderTheme={loaderTheme} loadAPR={loadAPR} actionable={actionable} />\n                  }\n\n                  {vesting2 && vestingAddress.length > 0 &&\n                    <VestingActions multisigContract={multisigContract} address={vestingAddress[1]} token={addresses.epnsToken} setLoader={setLoader} getData={getData} loaderTheme={loaderTheme} loadAPR={loadAPR} actionable={actionable} />\n                  }\n                  </>\n                }\n\n                {!multipleVesting &&\n                  <VestingActions loadAPR={loadAPR} multisigContract={multisigContract} address={vestingAddress[0]} token={addresses.epnsToken} setLoader={setLoader} getData={getData} loaderTheme={loaderTheme} loadAPR={loadAPR} actionable={actionable} />\n                }\n              </Item>\n\n            </Item>\n          }\n        </Item>\n      </Content>\n    </Section>\n  );\n};\n\nconst CardTitle = styled.span`\n  color: #e20880;\n  font-size: larger;\n  font-weight: bold;\n`;\n\nconst Action = styled.div`\n  display: flex;\n  border-bottom: 1px solid #eee;\n`;\n\nconst Label = styled.span`\n  flex: 1;\n  align-self: center;\n  font-weight: bold;\n`;\n\nconst Input = styled.input`\n  border: 0px;\n  outline: 0px;\n  border-bottom: 1px solid #ddd;\n  margin: 25px 10px;\n  padding: 5px;\n  flex: 1;\n`;\n\nconst Button = styled.button`\n  width: 100px;\n  height: 35px;\n  align-self: center;\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background: #e20880;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`;\n\nconst Container = styled.div`\n  //display: flex;\n  padding: 0.75rem;\n`;\n\nexport default TokenVestingApp;\n","import React, { Component } from 'react'\nimport moment from 'moment'\n\nimport styled, { css } from \"styled-components\";\nimport { getTokenVesting, getMultisigWallet, getFundsDistributorFactory, get } from '../contracts'\nimport { displayAmount, tokensToBn } from '../utils'\n\nimport { ContractLink, TransactionLink } from './Links'\nimport Emoji from './Emoji'\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport { toast } from 'react-toastify';\nimport { ethers } from 'ethers';\nimport { addresses, abis, bytecodes } from \"@project/contracts\";\nimport Loader from \"react-loader-spinner\";\n\nconst FundsDistributorCard = ({ name, contract }) => {\n  const [ canRevoke, setRevoke ] = React.useState(true);\n  const [ recipientAddress, setRecipientAddress ] = React.useState(\"\");\n  const [ startEpoch, setStartEpoch ] = React.useState(0);\n  const [ cliffDuration, setCliffDuration ] = React.useState(0);\n  const [ duration, setDuration ] = React.useState(0);\n  const [ revocable, setRevocable ] = React.useState(0);\n  const [ identifier, setIdentifier ] = React.useState(0);\n  const [ deployedAddress, setDeployedAddress ] = React.useState(null)\n  const [ loader, setLoader ] = React.useState(false);\n\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  async function onDeployVesting() {\n    let deployedVestingAddress = \"\";\n    try {\n      let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />, {\n        position: \"bottom-right\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      const tx = await contract.deploy(recipientAddress, startEpoch, cliffDuration, duration, revocable, identifier)\n      console.log(tx);\n\n      txToast = toast.dark(<LoaderToast msg=\"Transaction Sent, Waiting for mining...\" color=\"#35c5f3\" />, {\n        position: \"bottom-right\",\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      console.log(tx, \"tx\")\n      deployedVestingAddress = tx.deployTransaction.creates\n      setDeployedAddress(deployedVestingAddress);\n      await tx.deployTransaction.wait()\n\n      toast.update(txToast, {\n        render: \"Transaction Successful, Vesting Deployed\",\n        type: toast.TYPE.SUCCESS,\n        autoClose: 5000,\n      });\n      \n      try {\n        let txToast = toast.dark(<LoaderToast msg=\"Transferring Ownership, Waiting for Confirmation...\" color=\"#35c5f3\" />, {\n          position: \"bottom-right\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        const fundsDistributorInstance = await getTokenVesting(deployedVestingAddress, library, account);\n        const tx = await fundsDistributorInstance.transferOwnership(addresses.epnsMultisig);\n\n        txToast = toast.dark(<LoaderToast msg=\"Transaction Sent, Waiting for mining...\" color=\"#35c5f3\" />, {\n          position: \"bottom-right\",\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        \n        await tx.wait();\n\n        toast.update(txToast, {\n          render: \"Transaction Successful, Ownership transferred\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n      } catch (e) {\n        toast.update(txToast, {\n          render: e.message,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      }\n    } catch (e) {\n      toast.dark(e.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n  return (\n     <>\n        <Card>\n          <CardTitle>{name}</CardTitle>\n          <Action>\n            <Label>Deploy New Instance</Label>\n            <Input placeholder=\"Enter Beneficiary Address\" onChange={(e) => setRecipientAddress(e.target.value)} />\n            <Input placeholder=\"Enter Start Epoch\" onChange={(e) => setStartEpoch(e.target.value)} />\n            <Input placeholder=\"Enter Cliff Duration\" onChange={(e) => setCliffDuration(e.target.value)} />\n            <Input placeholder=\"Enter Duration\" onChange={(e) => setDuration(e.target.value)} />\n            <label for=\"revocable\">Revocable ?</label>\n\n            <Input type=\"radio\" id=\"true\" onChange={(e) => setRevocable(true)} />\n            <label for=\"true\">True</label>\n            <Input type=\"radio\" id=\"false\" onChange={(e) => setRevocable(false)} />\n            <label for=\"false\">False</label>\n\n            <Input placeholder=\"Enter Identifier\" onChange={(e) => setIdentifier(e.target.value)} />\n            <Button onClick={onDeployVesting}>Submit</Button>\n          </Action>\n          {\n            deployedAddress ? (<Label>New Funds Distributor Deployed to - {deployedAddress}</Label>): null\n          } \n        </Card>\n    </>\n  ) \n}\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\n\n// toast customize\nconst LoaderToast = ({ msg, color }) => (\n  <Toaster>\n    <Loader type=\"Oval\" color={color} height={30} width={30} />\n    <ToasterMsg>{msg}</ToasterMsg>\n  </Toaster>\n);\n\nconst CardTitle = styled.span`\n  color: #e20880;\n  font-size: larger;\n  font-weight: bold;\n`;\n\nconst Action = styled.div`\n  border-bottom: 1px solid #eee;\n`;\n\nconst Label = styled.p`\n  flex: 1;\n  align-self: center;\n  font-weight: bold;\n`;\n\nconst Container = styled.div`\n  // display: flex;\n  padding: 2rem;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  border: 0px;\n  outline: 0px;\n  border-bottom: 1px solid #ddd;\n  margin: 25px 10px;\n  padding: 5px;\n`\n\nconst Card = styled.div`\n  padding: 1.5rem;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n\n  align-items: center;\n  justify-content: center;\n`\n\nconst Button = styled.button`\n  width: 100px;\n  height: 35px;\n  align-self: center;\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background: #e20880;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst TitleLink = styled.h4`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  text-align: center;\n`\n\nexport default FundsDistributorCard","import React, { Component } from 'react'\nimport moment from 'moment'\n\nimport styled, { css } from \"styled-components\";\nimport { getTokenVesting, getMultisigWallet, getFundsDistributorFactory, getEPNSToken } from '../contracts'\nimport { displayAmount, tokensToBn } from '../utils'\n\nimport { ContractLink, TransactionLink } from './Links'\nimport Emoji from './Emoji'\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport { toast } from 'react-toastify';\nimport { ethers } from 'ethers';\n\nconst FundsDistributorFactoryCard = ({ name, contract, multisigContract }) => {\n  const [ canRevoke, setRevoke ] = React.useState(true);\n  const [ recipientAddress, setRecipientAddress ] = React.useState(\"\");\n  const [ startEpoch, setStartEpoch ] = React.useState(0);\n  const [ cliffDuration, setCliffDuration ] = React.useState(0);\n  const [ duration, setDuration ] = React.useState(0);\n  const [ revocable, setRevocable ] = React.useState(null);\n  const [ transferAmount, setTransferAmount ] = React.useState(0);\n  const [ withdrawAmount, setWithdrawAmount ] = React.useState(0);\n  const [ identifier, setIdentifier ] = React.useState(0);\n  const [ loader, setLoader ] = React.useState(false);\n  const [ epnsToken, setEpnsToken ] = React.useState(null);\n  const [ tokenBalance, setTokenBalance ] = React.useState(ethers.BigNumber.from(0));\n\n  const { active, error, account, library, chainId } = useWeb3React();\n  \n  function startLoader() {\n    setLoader(true)\n  }\n\n  function stopLoader() {\n    setLoader(false)\n  }\n\n  async function onDeployVesting() {\n    try {\n      const bnTransferAmount = tokensToBn(transferAmount);\n      const data = (await contract.populateTransaction.deployFundee(recipientAddress, startEpoch, cliffDuration, duration, revocable, bnTransferAmount, identifier)).data\n      \n      startLoader()\n      const tx = await multisigContract.submitTransaction(contract.address, 0, data);\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      const receipt = await tx.wait()\n      toast.dark(\"Transaction Successful\", {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {\n      toast.dark(e.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      stopLoader()\n    }\n  }\n\n  async function onWithdrawTokens() {\n    const bnWithdrawAmount = tokensToBn(withdrawAmount);\n    const data = (await contract.populateTransaction.withdrawTokens(bnWithdrawAmount)).data\n    try {\n      startLoader()\n      const tx = await multisigContract.submitTransaction(contract.address, 0, data);\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      const receipt = await tx.wait()\n      toast.dark(\"Transaction Successful\", {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {\n      toast.dark(e.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      stopLoader()\n    }\n  }\n\n  React.useEffect(() => {\n    try {\n      const epnsToken = getEPNSToken(library, account);\n      setEpnsToken(epnsToken);\n\n      const getTokenBalance = async () => {\n        const balance = await epnsToken.balanceOf(contract.address);\n        setTokenBalance(balance);\n      }\n\n      getTokenBalance();\n    } catch (error) {\n      toast.dark(\"Something went wrong fetching balance\", {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n  }, [account])\n\n  return (\n     <>\n        <Card>\n          <CardTitle>{name}</CardTitle>\n            <Label>Amount of Tokens Left - {displayAmount(tokenBalance)}</Label>\n          <Action>\n            <Label>Deploy New Instance</Label>\n            <Input placeholder=\"Enter Beneficiary Address\" onChange={(e) => setRecipientAddress(e.target.value)} />\n            <Input placeholder=\"Enter Start Epoch\" onChange={(e) => setStartEpoch(e.target.value)} />\n            <Input placeholder=\"Enter Cliff Duration\" onChange={(e) => setCliffDuration(e.target.value)} />\n            <Input placeholder=\"Enter Duration\" onChange={(e) => setDuration(e.target.value)} />\n            <label for=\"revocable\">Revocable ?</label>\n\n            <Input type=\"radio\" id=\"true\" onChange={(e) => setRevocable(true)} />\n            <label for=\"true\">True</label>\n            <Input type=\"radio\" id=\"false\" onChange={(e) => setRevocable(false)} />\n            <label for=\"false\">False</label>\n\n            <Input placeholder=\"Enter Token Amount\" onChange={(e) => setTransferAmount(e.target.value)} />\n            <Input placeholder=\"Enter Identifier\" onChange={(e) => setIdentifier(e.target.value)} />\n            <Button onClick={onDeployVesting}>Submit</Button>\n          </Action>\n\n          <Action style={{ display: 'flex' }}>\n            <Label>Withdraw Tokens</Label>\n            <Input placeholder=\"Enter Token Amount\" onChange={(e) => setWithdrawAmount(e.target.value)} />\n            <Button onClick={onWithdrawTokens}>Withdraw</Button>\n          </Action>\n        </Card>\n    </>\n  )\n\n  \n}\n\nconst CardTitle = styled.span`\n  color: #e20880;\n  font-size: larger;\n  font-weight: bold;\n`;\n\nconst Action = styled.div`\n  border-bottom: 1px solid #eee;\n`;\n\nconst Label = styled.p`\n  flex: 1;\n  align-self: center;\n  font-weight: bold;\n`;\n\nconst Container = styled.div`\n  // display: flex;\n  padding: 2rem;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  border: 0px;\n  outline: 0px;\n  border-bottom: 1px solid #ddd;\n  margin: 25px 10px;\n  padding: 5px;\n`\n\nconst Card = styled.div`\n  padding: 1.5rem;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n\n  align-items: center;\n  justify-content: center;\n`\n\nconst Button = styled.button`\n  width: 100px;\n  height: 35px;\n  align-self: center;\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background: #e20880;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst TitleLink = styled.h4`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  text-align: center;\n`\n\nexport default FundsDistributorFactoryCard","import React, { Component } from 'react'\nimport moment from 'moment'\n\nimport styled, { css } from \"styled-components\";\nimport { getTokenVesting, getMultisigWallet, getFundsDistributorFactory, getEPNSToken } from '../contracts'\nimport { displayAmount, tokensToBn } from '../utils'\n\nimport { ContractLink, TransactionLink } from './Links'\nimport Emoji from './Emoji'\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport { toast } from 'react-toastify';\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from 'ethers';\n\nconst VestedReservesCard = ({ name, contract, multisigContract }) => {\n  const [ canRevoke, setRevoke ] = React.useState(true);\n  const [ recipientAddress, setRecipientAddress ] = React.useState(\"\");\n  const [ startEpoch, setStartEpoch ] = React.useState(0);\n  const [ cliffDuration, setCliffDuration ] = React.useState(0);\n  const [ duration, setDuration ] = React.useState(0);\n  const [ revocable, setRevocable ] = React.useState(0);\n  const [ transferAmount, setTransferAmount ] = React.useState(0);\n  const [ withdrawAmount, setWithdrawAmount ] = React.useState(0);\n  const [ identifier, setIdentifier ] = React.useState(0);\n  const [ loader, setLoader ] = React.useState(false);\n  const [ epnsToken, setEpnsToken ] = React.useState(null);\n  const [ tokenBalance, setTokenBalance ] = React.useState(ethers.BigNumber.from(0));\n\n  const { active, error, account, library, chainId } = useWeb3React();\n  \n  function startLoader() {\n    setLoader(true)\n  }\n\n  function stopLoader() {\n    setLoader(false)\n  }\n\n  async function onRevokeCommRes() {\n    try {\n      console.log(contract)\n      const data = (await contract.populateTransaction.revoke(addresses.epnsToken)).data\n\n      startLoader()\n      \n      const tx = await multisigContract.submitTransaction(contract.address, 0, data);\n\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      const receipt = await tx.wait()\n      toast.dark(\"Transaction Successful\", {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {\n      toast.dark(e.message, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      stopLoader()\n    }\n  }\n\n  // async function onReleaseCommRes() {\n  //   try {\n  //     const tokenVesting = await getTokenVesting(releaseVestingAddress, library, account);\n  //     const data = (await tokenVesting.populateTransaction.release(addresses.epnsToken)).data\n  //     startLoader()\n      \n  //     const tx = await multisigContract.submitTransaction(tokenVesting.address, 0, data);\n\n  //     toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\n  //       position: \"bottom-right\",\n  //       autoClose: 5000,\n  //       hideProgressBar: false,\n  //       closeOnClick: true,\n  //       pauseOnHover: true,\n  //       draggable: true,\n  //       progress: undefined,\n  //     });\n  //     const receipt = await tx.wait()\n  //     toast.dark(\"Transaction Successful\", {\n  //       position: \"bottom-right\",\n  //       autoClose: 5000,\n  //       hideProgressBar: false,\n  //       closeOnClick: true,\n  //       pauseOnHover: true,\n  //       draggable: true,\n  //       progress: undefined,\n  //     });\n  //   } catch (e) {\n  //     toast.dark(e.message, {\n  //       position: \"bottom-right\",\n  //       autoClose: 5000,\n  //       hideProgressBar: false,\n  //       closeOnClick: true,\n  //       pauseOnHover: true,\n  //       draggable: true,\n  //       progress: undefined,\n  //     });\n  //     stopLoader()\n  //   }\n  // }\n\n  React.useEffect(() => {\n    try {\n      const epnsToken = getEPNSToken(library, account);\n      setEpnsToken(epnsToken);\n\n      const getTokenBalance = async () => {\n        const balance = await epnsToken.balanceOf(contract.address);\n        setTokenBalance(balance);\n      }\n\n      getTokenBalance();\n    } catch (error) {\n      toast.dark(\"Something went wrong fetching balance\", {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n  }, [account])\n\n  return (\n     <>\n        <Card>\n          <CardTitle>Manage {name}</CardTitle>\n          {/* <Action>\n            <Label>Release to Beneficiary Address</Label>\n            <Button onClick={onReleaseCommRes}>Release</Button>\n          </Action>\n          <Action>\n            <Label>Release to Beneficiary Address</Label>\n            <Input placeholder=\"Recipient Address\" onChange={(e) => setRecipientAddressCommRes(e.target.value)} />\n            <Input placeholder=\"Amount to Transfer\" onChange={(e) => setTransferAmountCommRes(e.target.value)} />\n            <Button onClick={onReleaseBeneficiaryCommRes}>Submit</Button>\n          </Action>\n          <Action>\n            <Label>Change Beneficiary Address</Label>\n            <Input placeholder=\"New Beneficiary Address\" onChange={(e) => setNewBeneficiary(e.target.value)} />\n            <Button onClick={onChangeBeneficiary}>Submit</Button>\n          </Action> */}\n          <Button onClick={onRevokeCommRes}>Revoke</Button>\n        </Card>\n    </>\n  )\n\n  \n}\n\nconst CardTitle = styled.span`\n  color: #e20880;\n  font-size: larger;\n  font-weight: bold;\n`;\n\nconst Action = styled.div`\n  border-bottom: 1px solid #eee;\n`;\n\nconst Label = styled.p`\n  flex: 1;\n  align-self: center;\n  font-weight: bold;\n`;\n\nconst Container = styled.div`\n  // display: flex;\n  padding: 2rem;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  border: 0px;\n  outline: 0px;\n  border-bottom: 1px solid #ddd;\n  margin: 25px 10px;\n  padding: 5px;\n`\n\nconst Card = styled.div`\n  padding: 1.5rem;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n\n  align-items: center;\n  justify-content: center;\n`\n\nconst Button = styled.button`\n  width: 100px;\n  height: 35px;\n  align-self: center;\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background: #e20880;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst TitleLink = styled.h4`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  text-align: center;\n`\n\nexport default VestedReservesCard","import moment from 'moment';\r\nimport React, { Component } from 'react';\r\n\r\nimport { abis, addresses } from \"@project/contracts\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { getEPNSToken, getFundsDistributor, getFundsDistributorFactory, getMultisigWallet, getReserves, getTokenVesting, getVestedReserves } from '../contracts';\r\nimport { displayAmount, tokensToBn } from '../utils';\r\n\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { ethers } from 'ethers';\r\nimport { toast } from 'react-toastify';\r\nimport Emoji from './Emoji';\r\nimport FundsDistributorCard from \"./FundsDistributorCard\";\r\nimport FundsDistributorFactoryCard from \"./FundsDistributorFactoryCard\";\r\nimport { ContractLink, TransactionLink } from './Links';\r\nimport VestedReservesCard from \"./VestedReservesCard\";\r\n\r\nconst AdminPanel = () => {\r\n  const [ canRevoke, setRevoke ] = React.useState(true);\r\n  const [ multisigAddress, setMultisigAddress ] = React.useState(\"\");\r\n  const [ multisigContract, setMultisigContract ] = React.useState(null);\r\n  const [ revokeFundsDistributorFactory, setRevokeFundsDistributorFactory ] = React.useState(addresses.fundsDistributorFactory.advisorsFactory);\r\n  const [ releaseVestingAddress, setReleaseVestingAddress ] = React.useState(\"\");\r\n  const [ revokeVestingAddress, setRevokeVestingAddress ] = React.useState(\"\");\r\n  const [ recipientAddress, setRecipientAddress ] = React.useState(\"\");\r\n  const [ transferAmount, setTransferAmount ] = React.useState(0);\r\n  const [ commUnlockedReservesBalance, setCommUnlockedReservesBalance ] = React.useState(0);\r\n\r\n  const [ confirmMultisigTxID, setConfirmMultisigTxID ] = React.useState(\"\");\r\n  const [ executeMultisigTxID, setExecuteMultisigTxID ] = React.useState(\"\");\r\n  const [ revokeMultisigTxID, setRevokeMultisigTxID ] = React.useState(\"\");\r\n  const [ multisigFactoryContractAddress, setMultisigFactoryContractAddress ] = React.useState(\"\");\r\n  const [ multisigBeneficiaryContractAddress, setMultisigBeneficiaryContractAddress ] = React.useState(\"\");\r\n  const [ confirmDelegateAddress, setConfirmDelegateAddress ] = React.useState(\"\");\r\n\r\n  const [ loader, setLoader ] = React.useState(false)\r\n\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  function startLoader() {\r\n    setLoader(true)\r\n  }\r\n\r\n  function stopLoader() {\r\n    setLoader(false)\r\n  }\r\n\r\n  async function onDelegateVotes() {\r\n    try {\r\n      const epnsToken = getEPNSToken(library, account);\r\n      const data = (await epnsToken.populateTransaction.delegate(confirmDelegateAddress)).data\r\n      startLoader()\r\n\r\n      const tx = await multisigContract.submitTransaction(addresses.epnsToken, 0, data);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onRelease() {\r\n    try {\r\n      const tokenVesting = await getTokenVesting(releaseVestingAddress, library, account);\r\n      const data = (await tokenVesting.populateTransaction.release(addresses.epnsToken)).data\r\n      startLoader()\r\n\r\n      const tx = await multisigContract.submitTransaction(tokenVesting.address, 0, data);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onCustomFunctionExecute() {\r\n    await setMultisigAddress(\"0x4957091F11Ca0A298a6656607Cc3B973cebb1F5c\");\r\n\r\n    try {\r\n      const multisigContractInstance = await getMultisigWallet(addresses.epnsMultisig, library, account);\r\n      startLoader()\r\n      const tx = await multisigContract.submitTransaction(\"0x19Ff5f2C05aC6a303aF6d5002C99686e823EBE72\", ethers.utils.parseUnits(\"0.01\", \"ether\"), ethers.constants.HashZero);\r\n\r\n      //const tx = await multisigContractInstance.executeTransaction(executeMultisigTxID);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onMultisigConfirm() {\r\n    try {\r\n      const multisigContractInstance = await getMultisigWallet(addresses.epnsMultisig, library, account);\r\n      startLoader()\r\n\r\n      const tx = await multisigContractInstance.confirmTransaction(confirmMultisigTxID);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onMultisigExecute() {\r\n    try {\r\n      const multisigContractInstance = await getMultisigWallet(addresses.epnsMultisig, library, account);\r\n      startLoader()\r\n\r\n      const tx = await multisigContractInstance.executeTransaction(executeMultisigTxID);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onMultisigRevoke() {\r\n    try {\r\n      const multisigContractInstance = await getMultisigWallet(addresses.epnsMultisig, library, account);\r\n      startLoader()\r\n\r\n      const tx = await multisigContractInstance.revokeConfirmation(revokeMultisigTxID);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onRevoke() {\r\n    try {\r\n      const fundsDistributorFactoryInstance = await getFundsDistributorFactory(revokeFundsDistributorFactory, library, account);\r\n      const data = (await fundsDistributorFactoryInstance.populateTransaction.revokeFundeeTokens(revokeVestingAddress)).data\r\n\r\n      startLoader()\r\n\r\n      const tx = await multisigContract.submitTransaction(fundsDistributorFactoryInstance.address, 0, data);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onMultisigToSafeOwnerChange() {\r\n    try {\r\n      const fundsDistributorFactoryInstance = await getFundsDistributorFactory(multisigFactoryContractAddress, library, account);\r\n      const data = (await fundsDistributorFactoryInstance.populateTransaction.transferOwnership(addresses.pushSafe)).data\r\n      const multisigContractInstance = await getMultisigWallet(addresses.epnsMultisig, library, account);\r\n      startLoader()\r\n\r\n      const tx = await multisigContractInstance.submitTransaction(multisigFactoryContractAddress, 0, data);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onBeneficiaryChangedToSafe() {\r\n    try {\r\n      const fundsDistributorInstance = await getVestedReserves(multisigBeneficiaryContractAddress, library, account);\r\n      const data = (await fundsDistributorInstance.populateTransaction.setBeneficiary(addresses.pushSafe)).data\r\n      const multisigContractInstance = await getMultisigWallet(addresses.epnsMultisig, library, account);\r\n      startLoader()\r\n\r\n      const tx = await multisigContractInstance.submitTransaction(multisigBeneficiaryContractAddress, 0, data);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function onTransferTokens() {\r\n    try {\r\n      const commUnlockedReserves = await getReserves(library, account);\r\n      const data = (await commUnlockedReserves.populateTransaction.transferTokensToAddress(recipientAddress, tokensToBn(transferAmount))).data\r\n\r\n      startLoader()\r\n\r\n      const tx = await multisigContract.submitTransaction(commUnlockedReserves.address, 0, data);\r\n\r\n      toast.dark(\"Transaction Sent - \"+ TransactionLink(tx.hash), {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      const receipt = await tx.wait()\r\n      toast.dark(\"Transaction Successful\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  async function setMultisigInstance() {\r\n    try {\r\n      startLoader()\r\n      if(multisigAddress == \"\" || multisigAddress.length < 42){\r\n        toast.dark(\"Invalid Values. Please enter correct multisig address\", {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        return\r\n      }\r\n      const multisigContract = await getMultisigWallet(multisigAddress, library, account);\r\n      setMultisigContract(multisigContract);\r\n      toast.dark(\"Multisig Account Set\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      startLoader()\r\n    } catch (e) {\r\n      toast.dark(e.message, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      stopLoader()\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    try {\r\n      const epnsToken = getEPNSToken(library, account);\r\n\r\n      const getCommReservesBalance = async () => {\r\n        const balance = await epnsToken.balanceOf(addresses.commUnlockedReserves);\r\n        setCommUnlockedReservesBalance(balance);\r\n      }\r\n\r\n      getCommReservesBalance();\r\n    } catch (error) {\r\n      toast.dark(\"Something went wrong fetching Unlocked Community Reserves Balance\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }, [account])\r\n\r\n  return (\r\n     <Container>\r\n      <TitleLink>ADMIN PANEL</TitleLink>\r\n        <Action>\r\n          <Label>Set Multisig Address (If POA)</Label>\r\n          <Input placeholder=\"Enter Multisig Address\" onChange={(e) => setMultisigAddress(e.target.value)} />\r\n          <Button onClick={setMultisigInstance}>Set Address</Button>\r\n        </Action>\r\n          {\r\n            multisigContract ? (\r\n              <><center><CardTitle>Multisig Address Set - </CardTitle><span>{multisigContract.address}</span></center></>\r\n            ): null\r\n          }\r\n\r\n      <Card>\r\n        <CardTitle>Custom Multisig Function</CardTitle>\r\n        <Action>\r\n          <Label>Custom Function Execute</Label>\r\n          <Button onClick={onCustomFunctionExecute}>Confirm</Button>\r\n        </Action>\r\n      </Card>\r\n\r\n        <Card>\r\n          <CardTitle>Manage Multisig Signing</CardTitle>\r\n          <Action>\r\n            <Label>Confirm & Execute Transaction</Label>\r\n            <Input placeholder=\"Multisig Id to Confirm\" onChange={(e) => setConfirmMultisigTxID(e.target.value)} />\r\n            <Button onClick={onMultisigConfirm}>Confirm</Button>\r\n          </Action>\r\n          <Action>\r\n            <Label>Execute Transaction</Label>\r\n            <Input placeholder=\"Multisig Id to Execute\" onChange={(e) => setExecuteMultisigTxID(e.target.value)} />\r\n            <Button onClick={onMultisigExecute}>Confirm</Button>\r\n          </Action>\r\n          <Action>\r\n            <Label>Revoke Transaction</Label>\r\n            <Input placeholder=\"Multisig Id to Revoke\" onChange={(e) => setRevokeMultisigTxID(e.target.value)} />\r\n            <Button onClick={onMultisigRevoke}>Revoke</Button>\r\n          </Action>\r\n          <Action>\r\n            <Label>Transfer Ownership</Label>\r\n            <Input placeholder=\"Multisig Factory Contract Address to change to Push safe\" onChange={(e) => setMultisigFactoryContractAddress(e.target.value)} />\r\n            <Button onClick={onMultisigToSafeOwnerChange}>Change Owner</Button>\r\n          </Action>\r\n          <Action>\r\n            <Label>Change Beneficiary</Label>\r\n            <Input placeholder=\"Change Beneficiary to Push Safe\" onChange={(e) => setMultisigBeneficiaryContractAddress(e.target.value)} />\r\n            <Button onClick={onBeneficiaryChangedToSafe}>Change Beneficiary</Button>\r\n          </Action>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardTitle>Delegate Votes of Multisig</CardTitle>\r\n          <Action>\r\n            <Label>Delegate Votes of Multisig</Label>\r\n            <Input placeholder=\"Delegate Multisig Votes to Address\" onChange={(e) => setConfirmDelegateAddress(e.target.value)} />\r\n            <Button onClick={onDelegateVotes}>Delegate</Button>\r\n          </Action>\r\n\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardTitle>Manage Vesting</CardTitle>\r\n          <Action>\r\n            <Label>Release to Beneficiary Address</Label>\r\n            <Input placeholder=\"Enter Vesting Contract Address\" onChange={(e) => setReleaseVestingAddress(e.target.value)} />\r\n            <Button onClick={onRelease}>Release</Button>\r\n          </Action>\r\n          <Action>\r\n            <Label>Revoke Vesting Tokens</Label>\r\n            <Select value={revokeFundsDistributorFactory} onChange={(e) => setRevokeFundsDistributorFactory(e.target.value)}>\r\n              <option value={addresses.fundsDistributorFactory.advisorsFactory}>Advisors</option>\r\n              <option value={addresses.fundsDistributorFactory.teamFactory}>Team</option>\r\n              <option value={addresses.fundsDistributorFactory.investorsAllocationFactory}>Investors</option>\r\n              <option value={addresses.fundsDistributorFactory.strategicAllocationFactory}>Strategic</option>\r\n            </Select>\r\n            <Input placeholder=\"Enter Vesting Contract Address\" onChange={(e) => setRevokeVestingAddress(e.target.value)} />\r\n            <Button onClick={onRevoke}>Revoke</Button>\r\n          </Action>\r\n        </Card>\r\n\r\n        <VestedReservesCard name={\"Community Reserves\"} contract={getVestedReserves(addresses.vestedReserves.commReserves, library, account)} multisigContract={multisigContract} />\r\n\r\n        <Card>\r\n          <CardTitle>Manage Unlocked Reserves</CardTitle>\r\n          <Label>Amount of Tokens Left - {displayAmount(commUnlockedReservesBalance)}</Label>\r\n          <Action>\r\n            <Label>Transfer Tokens to Address</Label>\r\n            <Input placeholder=\"Recipient Address\" onChange={(e) => setRecipientAddress(e.target.value)} />\r\n            <Input placeholder=\"Amount to Transfer\" onChange={(e) => setTransferAmount(e.target.value)} />\r\n            <Button onClick={onTransferTokens}>Submit</Button>\r\n          </Action>\r\n        </Card>\r\n\r\n        <FundsDistributorCard name={\"Deploy Funds Distributor\"} contract={getFundsDistributor(library, account)} />\r\n\r\n        <FundsDistributorFactoryCard name={\"Advisors\"} contract={getFundsDistributorFactory(addresses.fundsDistributorFactory.advisorsFactory, library, account)} multisigContract={multisigContract} />\r\n        <FundsDistributorFactoryCard name={\"Team\"} contract={getFundsDistributorFactory(addresses.fundsDistributorFactory.teamFactory, library, account)} multisigContract={multisigContract} />\r\n        <FundsDistributorFactoryCard name={\"Investors\"} contract={getFundsDistributorFactory(addresses.fundsDistributorFactory.investorsAllocationFactory, library, account)} multisigContract={multisigContract} />\r\n        <FundsDistributorFactoryCard name={\"Strategic\"} contract={getFundsDistributorFactory(addresses.fundsDistributorFactory.strategicAllocationFactory, library, account)} multisigContract={multisigContract} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Select = styled.select`\r\n  border: 0px;\r\n  outline: 0px;\r\n  border-bottom: 1px solid #ddd;\r\n`;\r\n\r\nconst CardTitle = styled.span`\r\n  color: #e20880;\r\n  font-size: larger;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #eee;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  flex: 1;\r\n  align-self: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  // display: flex;\r\n  padding: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 0px;\r\n  outline: 0px;\r\n  border-bottom: 1px solid #ddd;\r\n  margin: 25px 10px;\r\n  padding: 5px;\r\n  flex: 1;\r\n`\r\n\r\nconst Card = styled.div`\r\n  padding: 1.5rem;\r\n  background: #fff;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225,225,225);\r\n\r\n  margin: 20px;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  height: 35px;\r\n  align-self: center;\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  background: #e20880;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst TitleLink = styled.h4`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  text-align: center;\r\n`\r\n\r\nexport default AdminPanel\r\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\n\nimport { AiFillInfoCircle } from 'react-icons/ai';\nimport { Tooltip } from \"@material-ui/core\";\n\n// Faucet URLs\nfunction InfoTooltip({title}) {\n  // render\n  return (\n    <Tooltip style={{marginLeft: \"5px\"}} title={title}>\n        <span>\n            <AiFillInfoCircle style={{color: \"white\"}} />\n        </span>\n    </Tooltip>\n  );\n}\n\n// Export Default\nexport default InfoTooltip;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\n\nimport styled, { css, keyframes } from \"styled-components\";\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\nimport InfoTooltip from \"components/InfoTooltip\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { AnimateOnChange } from \"react-animation\";\nimport Loader from \"react-loader-spinner\";\nimport Blockies from \"components/BlockiesIdenticon\";\n\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\nconst ethers = require(\"ethers\");\n\nconst bn = function(number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\n\nconst tokens = function (amount) { return (bn(amount).mul(bn(10).pow(18))).toString() }\nconst tokensBN = function (amount) { return (bn(amount).mul(bn(10).pow(18))) }\nconst bnToInt = function (bnAmount) { return bnAmount.div(bn(10).pow(18)) }\n\n// Create Header\nexport default function PoolCard({\n  poolName,\n  poolAddress,\n  tokenAddress,\n  getPoolStats,\n  getPUSHPoolStats,\n  getUserData,\n  pushPoolStats,\n  userData,\n}) {\n  const { active, error, account, library, chainId } = useWeb3React();\n  const [depositAmountToken, setDepositAmountToken] = React.useState(0);\n  const [withdrawAmountToken, setWithdrawAmountToken] = React.useState(0);\n  const [harvestEpochValue, setHarvestEpochValue] = React.useState(0);\n  const [txInProgress, setTxInProgress] = React.useState(false);\n\n  const [showDepositItem, setShowDepositItem] = React.useState(false);\n\n  const [depositApproved, setDepositApprove] = React.useState(false);\n  const [txInProgressApprDep, setTxInProgressApprDep] = React.useState(false);\n\n  const [txInProgressDep, setTxInProgressDep] = React.useState(false);\n  const [showDepSlip, setShowDepSlip] = React.useState(null);\n\n  const [txInProgressWithdraw, setTxInProgressWithdraw] = React.useState(false);\n\n  const [txInProgressMassHarvest, setTxInProgressMassHarvest] = React.useState(false);\n\n  React.useEffect(() => {\n    // Check if the account has approved deposit\n    checkApprDeposit();\n\n  }, [depositAmountToken]);\n\n  const checkApprDeposit = async () => {\n    if (depositAmountToken <= 0) {\n      setDepositApprove(false);\n      return;\n    }\n    setTxInProgressApprDep(true);\n\n    var signer = library.getSigner(account);\n    const tokenAddr = poolName == \"Uniswap LP Pool (UNI-V2)\" ? addresses.epnsLPToken : addresses.epnsToken;\n    let token = new ethers.Contract(tokenAddr, abis.epnsToken, signer);\n\n    const allowance = await token.allowance(account, addresses.staking);\n    if (allowance.gte(bn(depositAmountToken))) {\n      setDepositApprove(true);\n    }\n    else {\n      setDepositApprove(false);\n    }\n\n    setTxInProgressApprDep(false);\n  }\n\n  const fillMax = async() => {\n    var signer = library.getSigner(account);\n    const tokenAddr = poolName == \"Uniswap LP Pool (UNI-V2)\" ? addresses.epnsLPToken : addresses.epnsToken;\n    let token = new ethers.Contract(tokenAddr, abis.epnsToken, signer);\n\n    let balance = bnToInt(await token.balanceOf(account));\n    setDepositAmountToken(parseInt(balance.toString().replace(/\\D/,'')) || 0)\n  }\n\n  const approveDeposit = async () => {\n    if (depositApproved || txInProgressApprDep) {\n      return\n    }\n\n    setTxInProgressApprDep(true);\n\n    var signer = library.getSigner(account);\n    let epnsToken = new ethers.Contract(tokenAddress, abis.epnsToken, signer);\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\n\n    const uintMax = bn(2).pow(bn(256)).sub(1)\n\n    const tx = epnsToken.approve(\n      staking.address,\n      uintMax\n    );\n\n    tx.then(async (tx) => {\n      let txToast = toast.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      try {\n        await library.waitForTransaction(tx.hash);\n\n        toast.update(txToast, {\n          render: \"Transaction Completed!\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n        setTxInProgressApprDep(false);\n        setDepositApprove(true);\n\n      } catch (e) {\n        toast.update(txToast, {\n          render: \"Transaction Failed! (\" + e.name + \")\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        setTxInProgressApprDep(false);\n      }\n    }).catch((err) => {\n      toast.dark(\"Transaction Cancelled!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgressApprDep(false);\n    });\n  }\n\n  const depositAmountTokenFarmSingleTx = async () => {\n    if (txInProgressDep || !approveDeposit) {\n      return\n    }\n\n    setTxInProgressDep(true)\n\n    var signer = library.getSigner(account);\n    let epnsToken = new ethers.Contract(tokenAddress, abis.epnsToken, signer);\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\n    console.log(depositAmountToken);\n\n    const tx2 = staking.deposit(\n      tokenAddress,\n      ethers.BigNumber.from(depositAmountToken).mul(\n        ethers.BigNumber.from(10).pow(18)\n      )\n    );\n\n    tx2\n      .then(async (tx) => {\n        let txToast = toast.dark(\n          <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n          {\n            position: \"bottom-right\",\n            autoClose: false,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          }\n        );\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n\n          getPoolStats();\n          getPUSHPoolStats(pushPoolStats);\n          getUserData();\n\n          setTxInProgressDep(false);\n          setShowDepSlip(true);\n          // window.location.reload();\n        } catch (e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000,\n          });\n\n          setTxInProgressDep(false);\n        }\n      })\n      .catch((err) => {\n        toast.dark(\"Transaction Cancelled!\", {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgressDep(false);\n      });\n  };\n\n  const withdrawAmountTokenFarmAutomatic = async () => {\n    if (txInProgressWithdraw) {\n      return;\n    }\n\n    setTxInProgressWithdraw(true);\n    const withdrawAmount = formatTokens(userData.epochStakeNext);\n\n    if (withdrawAmount == 0) {\n      toast.dark(\"Nothing to Withdraw!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgressWithdraw(false);\n      return;\n    }\n\n    var signer = library.getSigner(account);\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\n\n    const tx = staking.withdraw(\n      tokenAddress,\n      ethers.BigNumber.from(withdrawAmount).mul(\n        ethers.BigNumber.from(10).pow(18)\n      )\n    );\n\n    tx.then(async (tx) => {\n      let txToast = toast.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      try {\n        await library.waitForTransaction(tx.hash);\n\n        toast.update(txToast, {\n          render: \"Transaction Completed!\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n\n        setTxInProgressWithdraw(false);\n\n        getPoolStats();\n        getPUSHPoolStats(pushPoolStats);\n        getUserData();\n      } catch (e) {\n        toast.update(txToast, {\n          render: \"Transaction Failed! (\" + e.name + \")\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        setTxInProgressWithdraw(false);\n      }\n    }).catch((err) => {\n      toast.dark(\"Transaction Cancelled!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgressWithdraw(false);\n    });\n  };\n\n  const harvestTokens = async () => {\n    var signer = library.getSigner(account);\n    let yieldFarmingPUSH = new ethers.Contract(\n      poolAddress,\n      abis.yieldFarming,\n      signer\n    );\n\n    if (harvestEpochValue) {\n      const tx = yieldFarmingPUSH.harvest(harvestEpochValue);\n      tx.then(async (tx) => {\n        let txToast = toast.dark(\n          <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n          {\n            position: \"bottom-right\",\n            autoClose: false,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          }\n        );\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n\n          setTxInProgress(false);\n        } catch (e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000,\n          });\n\n          setTxInProgress(false);\n        }\n      }).catch((err) => {\n        toast.dark(\"Transaction Cancelled!\", {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgress(false);\n      });\n    }\n  };\n\n  const massHarvestTokensAll = async () => {\n    if (txInProgressMassHarvest) {\n      return;\n    }\n\n    if (!pushPoolStats.currentEpochPUSH || pushPoolStats.currentEpochPUSH == 1) {\n      toast.dark(\"Harvest unlocks from Epoch 2!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      return;\n    }\n    setTxInProgressMassHarvest(true);\n\n    console.log(poolAddress);\n\n    var signer = library.getSigner(account);\n    let yieldFarmingPUSH = new ethers.Contract(\n      poolAddress,\n      abis.yieldFarming,\n      signer\n    );\n    const tx = yieldFarmingPUSH.massHarvest();\n\n\n    tx.then(async (tx) => {\n      let txToast = toast.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      try {\n        await library.waitForTransaction(tx.hash);\n\n        toast.update(txToast, {\n          render: \"Transaction Completed!\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n\n        setTxInProgressMassHarvest(false);\n      } catch (e) {\n        toast.update(txToast, {\n          render: \"Transaction Failed! (\" + e.name + \")\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        setTxInProgressMassHarvest(false);\n      }\n    }).catch((err) => {\n      toast.dark(\"Transaction Cancelled!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgressMassHarvest(false);\n    });\n  };\n\n  const formatTokens = (tokens) => {\n    if (tokens) {\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\n    }\n  };\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return (\n    <>\n    <Item margin=\"20px\" align=\"stretch\" self=\"stretch\" border=\"1px solid #e1e1e1\" radius=\"12px\">\n      <Item>\n        <Item>\n          <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n            <Span bg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"} size=\"0.8em\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">{poolName}</Span>\n          </H2>\n          <Item\n            align=\"flex-end\"\n            self=\"stretch\"\n          >\n            <H3>\n              <Span>Current APR </Span><Span bg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"} padding=\"2px 8px\" weight=\"600\" color=\"#fff\"><b>{pushPoolStats.stakingAPR}%</b></Span>\n            </H3>\n          </Item>\n        </Item>\n\n        <ItemH margin=\"10px 0px 0px 0px\" self=\"stretch\" items=\"stretch\" bg=\"#f1f1f1\">\n          <PoolContainer bg=\"#fff\" margin=\"5px 15px\" radius=\"12px\" border=\"1px solid #ddd\" borderBottom=\"8px solid #e1e1e1\">\n            <PoolBoxTitle margin=\"15px 10px\" fg=\"#999\" textTransform=\"uppercase\" size=\"10px\" spacing=\"0.2em\">Current Reward</PoolBoxTitle>\n            <PoolBoxMsg\n              bg=\"transparent\"\n              fg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"}\n              size=\"16px\"\n              margin=\"-15px 5px 10px 5px\"\n            >\n              {numberWithCommas(formatTokens(pushPoolStats.rewardForCurrentEpoch))} PUSH\n            </PoolBoxMsg>\n          </PoolContainer>\n\n          <PoolContainer bg=\"#fff\" margin=\"5px 15px\" radius=\"12px\" border=\"1px solid #ddd\" borderBottom=\"8px solid #e1e1e1\">\n            <PoolBoxTitle margin=\"15px 10px\" fg=\"#999\" textTransform=\"uppercase\" size=\"10px\" spacing=\"0.2em\">Total Staked</PoolBoxTitle>\n            <PoolBoxMsg\n              bg=\"transparent\"\n              fg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"}\n              size=\"16px\"\n              margin=\"-15px 5px 10px 5px\"\n            >\n              {numberWithCommas(formatTokens(pushPoolStats.poolBalance))} {poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"UNI-V2\" : \"PUSH\"}\n            </PoolBoxMsg>\n          </PoolContainer>\n        </ItemH>\n\n        <Item\n          self=\"stretch\"\n          align=\"flex-end\"\n          margin=\"0px 0px 10px 0px\"\n        >\n          <EpochDisplayer>\n            <Span padding=\"0px 5px 0px 0px\">Current Epoch</Span><B>{pushPoolStats.currentEpochPUSH.toString()}/{pushPoolStats.totalEpochPUSH}</B>\n          </EpochDisplayer>\n        </Item>\n      </Item>\n\n      <Item padding=\"10px 20px 0px 20px\" align=\"stretch\" self=\"stretch\">\n        <ItemH margin=\"0px\">\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\n            <PoolBoxTitle>User Deposit</PoolBoxTitle>\n            <PoolBoxMsg>{formatTokens(userData.epochStakeNext)} {poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"UNI-V2\" : \"PUSH\"}</PoolBoxMsg>\n          </Item>\n\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\n              <PoolBoxTitle>Rewards Claimed <InfoTooltip title={\"The total rewards you have already claimed from the pool. This includes all the rewards including the ones already harvested.\"} /></PoolBoxTitle>\n              <PoolBoxMsg>{(userData.totalAccumulatedReward - userData.totalAvailableReward).toFixed(2)} PUSH</PoolBoxMsg>\n          </Item>\n        </ItemH>\n\n        <ItemH margin=\"0px\">\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\n            <PoolBoxTitle>Current Epoch Reward <InfoTooltip title={\"This is only an estimation for the user's reward that they might get after the epoch. This might change depending upon deposits from other users.\"} /></PoolBoxTitle>\n            <PoolBoxMsg>{userData.potentialUserReward} PUSH</PoolBoxMsg>\n          </Item>\n\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\n            <PoolBoxTitle>Available for Harvest <InfoTooltip title={\"The rewards that are currently available for harvesting and can be immediately transferred to your address.\"} /></PoolBoxTitle>\n            <PoolBoxMsg>{userData.totalAvailableReward} PUSH</PoolBoxMsg>\n          </Item>\n        </ItemH>\n      </Item>\n\n      {showDepositItem &&\n        <Item bg=\"#ddd\" radius=\"12px\" margin=\"20px 0px -10px 0px\" padding=\"10px 20px\" align=\"stretch\" self=\"stretch\">\n\n          {!showDepSlip &&\n            <>\n              <Item>\n                <MaxButton\n                  bg=\"#000\"\n                  onClick={fillMax}\n                  position=\"absolute\"\n                >\n                  Max\n                </MaxButton>\n\n                <Input\n                  placeholder=\"Number of Tokens\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  self=\"stretch\"\n                  bg=\"#fff\"\n                  value={depositAmountToken}\n                  onChange={(e) => {\n                    setDepositAmountToken(parseInt(e.target.value.replace(/\\D/,'')) || 0)\n                  }}\n                />\n              </Item>\n\n              <ItemH>\n                <ButtonAlt\n                  bg={depositApproved ? \"#999\" : \"#e20880\"}\n                  onClick={approveDeposit}\n                  disabled={depositApproved ? true : false}\n                >\n                  {!depositApproved && !txInProgressApprDep &&\n                    <Span color=\"#fff\" weight=\"400\">Approve</Span>\n                  }\n                  {txInProgressApprDep && !depositApproved &&\n                    <Loader\n                      type=\"Oval\"\n                      color=\"#fff\"\n                      height={12}\n                      width={12}\n                    />\n                  }\n                  {!txInProgress && depositApproved &&\n                    <Span color=\"#fff\" weight=\"600\">Approved</Span>\n                  }\n                </ButtonAlt>\n                <ButtonAlt\n                  bg={!depositApproved ? \"#999\" : \"#e20880\"}\n                  disabled={!depositApproved ? true : false}\n                  onClick={depositAmountTokenFarmSingleTx}\n                >\n                  {!txInProgressDep &&\n                    <Span color=\"#fff\" weight=\"400\">Deposit</Span>\n                  }\n                  {txInProgressDep &&\n                    <Loader\n                      type=\"Oval\"\n                      color=\"#fff\"\n                      height={12}\n                      width={12}\n                    />\n                  }\n                </ButtonAlt>\n              </ItemH>\n            </>\n          }\n\n          {showDepSlip &&\n            <Span\n              bg=\"#e20880\"\n              color=\"#fff\"\n              align=\"center\"\n              textTransform=\"uppercase\"\n              spacing=\"0.1em\"\n              size=\"14px\"\n              weight=\"600\"\n              padding=\"10px\"\n              self=\"stretch\"\n            >\n              Deposit Successful!\n            </Span>\n          }\n\n        </Item>\n      }\n\n      <ItemH padding=\"0px 20px 0px 20px\" margin=\"20px 0px 20px 0px\" align=\"center\" self=\"stretch\">\n        {!showDepositItem &&\n          <ButtonAlt\n            bg=\"#e20880\"\n            onClick={() => setShowDepositItem(!showDepositItem)}\n          >\n            {!txInProgressDep &&\n              <Span color=\"#fff\" weight=\"400\">Deposit</Span>\n            }\n            {txInProgressApprDep &&\n              <Loader\n                type=\"Oval\"\n                color=\"#fff\"\n                height={12}\n                width={12}\n              />\n            }\n          </ButtonAlt>\n        }\n\n        <ButtonAlt\n          bg=\"#000\"\n          onClick={() => withdrawAmountTokenFarmAutomatic()}\n        >\n          {!txInProgressWithdraw &&\n            <Span color=\"#fff\" weight=\"400\">Withdraw</Span>\n          }\n          {txInProgressWithdraw &&\n            <Loader\n              type=\"Oval\"\n              color=\"#fff\"\n              height={12}\n              width={12}\n            />\n          }\n        </ButtonAlt>\n\n        <ButtonAlt\n          bg=\"#000\"\n          onClick={() => massHarvestTokensAll()}\n        >\n          {!txInProgressMassHarvest &&\n            <Span color=\"#fff\" weight=\"400\">Harvest</Span>\n          }\n          {txInProgressMassHarvest &&\n            <Loader\n              type=\"Oval\"\n              color=\"#fff\"\n              height={12}\n              width={12}\n            />\n          }\n        </ButtonAlt>\n      </ItemH>\n    </Item>\n    </>\n  );\n}\n\n// toast customize\nconst LoaderToast = ({ msg, color }) => (\n  <Toaster>\n    <Loader type=\"Oval\" color={color} height={30} width={30} />\n    <ToasterMsg>{msg}</ToasterMsg>\n  </Toaster>\n);\n\n\nconst MaxButton = styled(Button)`\n  position: absolute;\n  right: 0;\n  padding: 4px 8px;\n  margin: 5px;\n  border-radius: 4px;\n  font-size: 12px;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 0.1em;\n`\n\nconst PoolContainer = styled(Item)`\n  border-bottom: ${props => props.borderBottom || \"none\"};\n`\n\nconst PoolBoxTitle = styled(Span)`\n  background: ${props => props.bg || 'transparent'};\n  color: ${props => props.fg || '#fff'};\n  font-weight: 600;\n  font-size: ${props => props.size || '12px'};\n  margin: ${props => props.margin || '10px 5px'};\n  letter-spacing: 0.1em;\n`\n\nconst PoolBoxMsg = styled(Span)`\n  background: ${props => props.bg || '#fff'};\n  color: ${props => props.fg || '#000'};\n  font-weight: 600;\n  font-size: ${props => props.size || '12px'};\n  margin: ${props => props.margin || '5px 5px 10px 5px'};\n  letter-spacing: 0.1em;\n  padding: 4px 15px;\n  border-radius: 10px;\n`\n\nconst Container = styled.div`\n  padding: 18px;\n  background: #fff;\n  flex: 1;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 10px;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst MainTitle = styled.h2`\n  text-transform: uppercase;\n`;\n\nconst Heading = styled.h5`\n  font-weight: 600;\n  color: #e20880;\n  text-transform: uppercase;\n`;\n\nconst EpochDisplayer = styled(Span)`\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  font-size: 12px;\n  background: #f1f1f1;\n  padding: 0px 10px 0px 10px;\n  position: relative;\n  height: 23px;\n  align-items: center;\n  text-align: center;\n  display: flex;\n\n  &:after {\n    width: 0;\n    height: 0;\n    border-top: 0px solid transparent;\n    border-bottom: 25px solid transparent;\n    border-right: 10px solid #f1f1f1;\n    left: -10px;\n    content: '';\n    position: absolute;\n  }\n`\n\nconst ButtonAlt = styled(Button)`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      &:hover {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n      &:active {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n    `}\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n","import React from \"react\";\n\nimport styled, { css, keyframes } from \"styled-components\";\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { AiOutlineWarning } from 'react-icons/ai';\nimport { BsChevronExpand } from 'react-icons/bs';\n\nimport { AnimateOnChange } from \"react-animation\";\nimport Loader from \"react-loader-spinner\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport YieldFarmingDataStore from \"singletons/YieldFarmingDataStore\";\nimport PoolCard from \"components/PoolCard\";\n\nconst ethers = require(\"ethers\");\n\n// Create Header\nfunction YieldFarming() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [poolStats, setPoolStats] = React.useState(null);\n  const [pushPoolStats, setPushPoolStats] = React.useState(null);\n  const [lpPoolStats, setLpPoolStats] = React.useState(null);\n  const [userDataPUSH, setUserDataPUSH] = React.useState(null);\n  const [userDataLP, setUserDataLP] = React.useState(null);\n\n  const [formattedDuration, setFormattedDuration] = React.useState(\"\");\n\n  const [epnsToken, setEpnsToken] = React.useState(null);\n  const [staking, setStaking] = React.useState(null);\n  const [yieldFarmingPUSH, setYieldFarmingPUSH] = React.useState(null);\n  const [yieldFarmingLP, setYieldFarmingLP] = React.useState(null);\n  const [uniswapV2Router02, setUniswapV2Router02] = React.useState(null);\n\n  const [showAnswers, setShowAnswers] = React.useState([]);\n\n  const [loadingUserData, setLoadingUserData] = React.useState(false);\n\n  const toggleShowAnswer = (id) => {\n    let newShowAnswers = [...showAnswers];\n    newShowAnswers[id] = !newShowAnswers[id];\n\n    setShowAnswers(newShowAnswers);\n  }\n\n  const getPoolStats = React.useCallback(async () => {\n    const poolStats = await YieldFarmingDataStore.instance.getPoolStats();\n\n    setPoolStats({ ...poolStats });\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\n\n  const getPUSHPoolStats = React.useCallback(async () => {\n    const pushPoolStats = await YieldFarmingDataStore.instance.getPUSHPoolStats();\n\n    setPushPoolStats({ ...pushPoolStats });\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\n\n  const getLPPoolStats = React.useCallback(async (poolStats) => {\n    const lpPoolStats = await YieldFarmingDataStore.instance.getLPPoolStats(poolStats);\n\n    setLpPoolStats({ ...lpPoolStats });\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\n\n  const getUserDataPUSH = React.useCallback(async () => {\n    const userDataPUSH = await YieldFarmingDataStore.instance.getUserData(yieldFarmingPUSH);\n\n    setUserDataPUSH({ ...userDataPUSH });\n  }, [yieldFarmingPUSH]);\n\n  const getUserDataLP = React.useCallback(async () => {\n    const userDataLP = await YieldFarmingDataStore.instance.getUserData(yieldFarmingLP);\n\n    setUserDataLP({ ...userDataLP });\n  }, [yieldFarmingLP]);\n\n  const formatTokens = (tokens) => {\n    if (tokens) {\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\n    }\n  };\n\n  const getFormattedDuration = () => {\n    if (poolStats?.epochEndTimestamp) {\n      const epochEndTimestamp = poolStats.epochEndTimestamp.toNumber();\n\n      const duration = epochEndTimestamp - Math.floor(new Date() / 1000);\n\n      if(duration < 0) {\n        getPoolStats()\n      }\n\n      const day = parseInt(duration / 86400);\n      const hour = parseInt((duration - day * 86400) / 3600);\n\n      const minutes = parseInt((duration - (day * 86400 + hour * 3600)) / 60);\n      const seconds = duration - (day * 86400 + hour * 3600 + minutes * 60);\n\n      setFormattedDuration(`${day}D ${hour}H ${minutes}M ${seconds}S`);\n    }\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      getFormattedDuration();\n    }, 1000);\n  });\n\n  React.useEffect(() => {\n    let epnsToken = new ethers.Contract(\n      addresses.epnsToken,\n      abis.epnsToken,\n      library\n    );\n\n    let staking = new ethers.Contract(addresses.staking, abis.staking, library);\n    let yieldFarmingPUSH = new ethers.Contract(\n      addresses.yieldFarmPUSH,\n      abis.yieldFarming,\n      library\n    );\n\n    let yieldFarmingLP = new ethers.Contract(\n      addresses.yieldFarmLP,\n      abis.yieldFarming,\n      library\n    );\n\n    let uniswapV2Router02Instance = new ethers.Contract(\n      addresses.uniswapV2Router02,\n      abis.uniswapV2Router02,\n      library\n    );\n\n    setEpnsToken(epnsToken);\n    setStaking(staking);\n    setYieldFarmingPUSH(yieldFarmingPUSH);\n    setYieldFarmingLP(yieldFarmingLP);\n    setUniswapV2Router02(uniswapV2Router02Instance)\n\n    if (!!(library && account)) {\n      var signer = library.getSigner(account);\n\n      let epnsToken = new ethers.Contract(\n        addresses.epnsToken,\n        abis.epnsToken,\n        signer\n      );\n      let staking = new ethers.Contract(\n        addresses.staking,\n        abis.staking,\n        signer\n      );\n      let yieldFarmingPUSH = new ethers.Contract(\n        addresses.yieldFarmPUSH,\n        abis.yieldFarming,\n        signer\n      );\n      let yieldFarmingLP = new ethers.Contract(\n        addresses.yieldFarmLP,\n        abis.yieldFarming,\n        signer\n      );\n\n      let uniswapV2Router02Instance = new ethers.Contract(\n        addresses.uniswapV2Router02,\n        abis.uniswapV2Router02,\n        signer\n      );\n\n      setEpnsToken(epnsToken);\n      setStaking(staking);\n      setYieldFarmingPUSH(yieldFarmingPUSH);\n      setYieldFarmingLP(yieldFarmingLP);\n      setUniswapV2Router02(uniswapV2Router02Instance);\n  }\n  }, [account]);\n\n  React.useEffect(() => {\n    if (epnsToken != null && staking != null && yieldFarmingPUSH != null) {\n      // Instantiate Data Stores\n      YieldFarmingDataStore.instance.init(\n        account,\n        epnsToken,\n        staking,\n        yieldFarmingPUSH,\n        yieldFarmingLP,\n        uniswapV2Router02\n      );\n\n      getPoolStats();\n\n      // setpoolStats(YieldFarmingDataStore.instance.state);\n    }\n  }, [getPoolStats]);\n\n  React.useEffect(() => {\n    if (poolStats) {\n      syncData(poolStats);\n    }\n\n  }, [poolStats]);\n\n  const syncData = async (poolStats) => {\n    getPUSHPoolStats();\n    getLPPoolStats(poolStats);\n\n    getUserDataPUSH();\n    getUserDataLP();\n  }\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return (\n    <Section>\n      {/* Warning for incentive */}\n      <Span\n        padding=\"1rem 1.5rem\"\n        margin=\"1rem\"\n        bg=\"#CF1C84\"\n        color=\"#fff\"\n        textAlign=\"left\"\n        size=\"1.2rem\"\n        weight=\"600\"\n        style={{borderRadius:\"20px\"}}\n      >\n        <ItemH style={{ marginBottom: \"0.6rem\", justifyContent:\"flex-start\" }} >\n          {/* <AiOutlineWarning size={28} /> */}\n          <H2 color=\"#fff\" fontSize=\"1.5rem\" margin=\"0\"  weight=\"700\" style={{ marginLeft: \"0.3rem\" }}>\n            REWARDS PROGRAM WILL BE EXTENDED BY 84 WEEKS!!\n          </H2>\n        </ItemH>\n          The Push DAO has approved the extension of the Rewards Program for 84 more weeks! More info\n        <a\n          style={{ color: \"white\", marginLeft: \"4px\" }}\n          href=\"https://medium.com/push-protocol/push-dao-extends-liquidity-rewards-program-26008926b05a\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          here\n        </a>\n      </Span>\n      {poolStats ? (\n        <>\n          <Content theme=\"#f3f3f3\">\n            <ItemH margin=\"0px 15px 0px 15px\" align=\"stretch\">\n              <StatsCard bg=\"#fff\">\n                <StatsHeading bg=\"#e20880\">Total Value Locked</StatsHeading>\n                <StatsContent>\n                  <StatsInnerTitle>{`$ ${numberWithCommas(\n                    poolStats.totalValueLocked.toFixed(2)\n                  )}`}</StatsInnerTitle>\n                </StatsContent>\n                <StatsPreview color=\"#e20880\">TVL</StatsPreview>\n              </StatsCard>\n\n              <StatsCard bg=\"#fff\">\n                <StatsHeading bg=\"#35c5f3\">PUSH Rewards Given</StatsHeading>\n                <StatsContent>\n                  <StatsInnerTitle>\n                    {numberWithCommas(\n                      formatTokens(poolStats.pushRewardsDistributed)\n                    )}\n                  </StatsInnerTitle>\n                  <StatsInnerSub>\n                    out of{\" \"}\n                    {numberWithCommas(\n                      formatTokens(poolStats.totalDistributedAmount)\n                    )}\n                  </StatsInnerSub>\n                </StatsContent>\n                <StatsPreview color=\"#35c5f3\">Rewarded</StatsPreview>\n              </StatsCard>\n\n              <StatsCard bg=\"#fff\">\n                <StatsHeading bg=\"#674c9f\">Time Left</StatsHeading>\n                <StatsContent>\n                  <StatsInnerTitle>{formattedDuration}</StatsInnerTitle>\n                  <StatsInnerSub>until next epoch</StatsInnerSub>\n                </StatsContent>\n                <StatsPreview color=\"#674c9f\">time left</StatsPreview>\n              </StatsCard>\n\n              <StatsCard bg=\"#fff\">\n                <StatsHeading bg=\"#000\">PUSH Price</StatsHeading>\n                <StatsContent>\n                  <StatsInnerTitle>{`$ ${poolStats.pushPrice.toFixed(\n                    2\n                  )}`}</StatsInnerTitle>\n                  <StatsInnerSub>\n                    <a\n                      target=\"_blank\"\n                      href=\"https://app.uniswap.org/#/swap?inputCurrency=0xf418588522d5dd018b425e472991e52ebbeeeeee\"\n                    >\n                      Uniswap\n                    </a>\n                  </StatsInnerSub>\n                </StatsContent>\n                <StatsPreview color=\"#000\">UNISWAP</StatsPreview>\n              </StatsCard>\n            </ItemH>\n          </Content>\n\n          {!(lpPoolStats && userDataLP) && !(pushPoolStats && userDataPUSH) ? (\n            <Item padding=\"20px\">\n              <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n            </Item>\n          ) : (\n            <Content padding=\"25px 0px\">\n              <ItemH margin=\"0px 10px 0px 10px\" align=\"stretch\">\n                {lpPoolStats && userDataLP ? (\n                  <PoolCard\n                    poolName={\"Uniswap LP Pool (UNI-V2)\"}\n                    poolAddress={addresses.yieldFarmLP}\n                    tokenAddress={addresses.epnsLPToken}\n                    getPoolStats={getPoolStats}\n                    getPUSHPoolStats={getLPPoolStats}\n                    getUserData={getUserDataLP}\n                    pushPoolStats={lpPoolStats}\n                    userData={userDataLP}\n                  />\n                ) : null}\n                {pushPoolStats && userDataPUSH ? (\n                  <PoolCard\n                    poolName={\"Staking Pool (PUSH)\"}\n                    poolAddress={addresses.yieldFarmPUSH}\n                    tokenAddress={addresses.epnsToken}\n                    getPoolStats={getPoolStats}\n                    getPUSHPoolStats={getPUSHPoolStats}\n                    getUserData={getUserDataPUSH}\n                    pushPoolStats={pushPoolStats}\n                    userData={userDataPUSH}\n                  />\n                ) : null}\n              </ItemH>\n            </Content>\n          )}\n        </>\n      ) : (\n        <Item padding=\"40px\">\n          <Loader type=\"Oval\" color=\"#e20880\" height={40} width={40} />\n        </Item>\n      )}\n    </Section>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`\n\nconst StatsCard = styled(Item)`\n  overflow: hidden;\n  min-width: 180px;\n\n  border-radius: 12px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 0px 15px;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst CenterHeading = styled.h2`\n  text-align: center;\n`;\n\nconst PoolContainer = styled.div`\n  display: flex;\n`;\n\nconst StatsHeading = styled(Item)`\n  flex: 0;\n  align-self: stretch;\n  color: #fff;\n  top: 0px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  font-size: 15px;\n  text-align: center;\n  padding: 10px 5px;\n  right: 0;\n  left: 0;\n`\n\nconst StatsContent = styled(Item)`\n  padding: 20px 20px;\n`\n\nconst StatsPreview = styled(Span)`\n  position: absolute;\n  bottom: 5px;\n  right: 10px;\n  font-weight: 600;\n  font-size: 12px;\n  opacity: 0.25;\n  letter-spacing:0.1em;\n  text-transform: uppercase;\n  color: ${props => props.color || '#000'};\n  z-index: -1;\n`\n\nconst StatsInnerTitle = styled.span`\n  font-weight: bold;\n  font-size: 22px;\n  letter-spacing: 0.1em;\n`;\n\nconst StatsInnerSub = styled.span`\n  font-size: 12px;\n  color: #999;\n  font-weight: 600;\n  align-self: flex-end;\n`;\n\n// Export Default\nexport default YieldFarming;\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { utils } from \"ethers\";\n\nconst { bigNumberify } = utils;\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n    ADD_CHANNEL_ANY: \"AddChannelAny\",\n    ADD_CHANNEL_SELF: \"AddChannelSelf\",\n    UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n    UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n    SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n    SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n    UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n    UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n}\n\nexport default class ChannelsDataStore {\n    static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n    state = {\n      channelsCount: -1,\n      channelsMeta: {},\n      channelsJson: {},\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n    }\n\n    // init\n    init = (account, epnsReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetChannelsListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.initChannelsListenersAsync();\n\n      // next get store channels count\n      this.getChannelsCountAsync();\n    }\n\n    // RESET LISTENERS\n    resetChannelsListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\n      }\n    }\n\n    // init LISTENERS\n    initChannelsListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForAddChannelAnyAsync();\n      await this.listenForAddChannelSelfAsync();\n\n      await this.listenForUpdateChannelAnyAsync();\n      await this.listenForUpdateChannelSelfAsync();\n\n      await this.listenForSubscribeAnyAsync();\n      await this.listenForSubscribeSelfAsync();\n      await this.listenForUnsubscribeAnyAsync();\n      await this.listenForUnsubscribeSelfAsync();\n    }\n\n    // 1. Add Any Channel Listeners\n    listenForAddChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        await this.incrementChannelsCountAsync(1);\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 2. Add Self Channel Listener\n    listenForAddChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        // Nothing to do, just do callback\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 3. Update Any Channel Listener\n    listenForUpdateChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 4. Update Self Channel Listener\n    listenForUpdateChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 5. Subscriber Any\n    listenForSubscribeAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        if (this.state.channelsMeta[channel]) {\n          const channelID = this.state.channelsMeta[channel];\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n          count = count + 1;\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 6. Subscriber Self\n    listenForSubscribeSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 7. Unsubscribe Any\n    listenForUnsubscribeAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        if (this.state.channelsMeta[channel]) {\n          const channelID = this.state.channelsMeta[channel];\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n          count = count - 1;\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 8. Unsubscribe Self\n    listenForUnsubscribeSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // CHANNELS COUNT\n    getChannelsCountAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfChannels(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.channelsCount = response;\n\n              if (enableLogs) console.log(\"getChannelsCountAsync() --> %o\", response);\n              resolve(this.state.channelsCount)\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n        else {\n          resolve(this.state.channelsCount);\n        }\n      });\n    }\n\n    incrementChannelsCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getChannelsCountAsync()\n          .then(response => {\n            this.state.channelsCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.channelsCount);\n            resolve(this.state.channelsCount)\n          })\n          .catch(err => { console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err); reject(err); });\n      });\n\n    }\n\n    // CHANNELS META FUNCTIONS\n    // To get channels meta\n    getChannelsMetaAsync = async (atIndex, numChannels) => {\n      return new Promise (async (resolve, reject) => {\n        // get total number of channels\n        const channelsCount = await this.getChannelsCountAsync();\n\n        if (atIndex == -1) {\n          atIndex = channelsCount - 1;\n        }\n\n        if (numChannels == -1) {\n          numChannels = channelsCount;\n        }\n\n        // Get channels\n        let channelsMeta = [];\n        let channelsDummy = [];\n\n        // prefil and then refil\n        let count = 0;\n        for (let i = 0; i < numChannels; i++) {\n          const assignedChannelID = atIndex - i;\n          channelsDummy[count] = assignedChannelID;\n          count = count + 1;\n        }\n\n        const promises = channelsDummy.map(async (channelID) => {\n          // Match the cache\n          await this.getChannelMetaAsync(channelID)\n            .then(response => {\n              const mappings = { ...response };\n              mappings.id = channelID;\n\n              channelsMeta = [mappings, ...channelsMeta];\n            })\n            .catch(err => console.log(\"!!!Error (but skipping), getChannelMetaAsync() --> %o\", err))\n        });\n\n        // wait until all promises are resolved\n        await Promise.all(promises);\n\n        channelsMeta.sort((a, b) => {\n          if (a.id < b.id) return -1;\n          if (a.id > b.id) return 1;\n          return 0;\n        });\n\n        // return channels meta\n        console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", atIndex - numChannels + 1, atIndex, channelsMeta);\n        resolve(channelsMeta);\n      });\n    }\n\n    // To get a single channel meta via id\n    getChannelMetaAsync = async (channelID) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelID]) {\n          console.log(\"getChannelMetaAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          let channelAddress;\n\n          await EPNSCoreHelper.getChannelAddressFromID(channelID, this.state.epnsReadProvider)\n            .then(async response => {\n              channelAddress = response;\n              await this.getChannelMetaViaAddressAsync(channelAddress)\n                .then(response => {\n                  // update the channel cache before resolving\n                  this.state.channelsMeta[channelID] = response;\n                  this.state.channelsMeta[channelAddress] = channelID;\n\n                  // resolve\n                  console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                  resolve(response);\n                })\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // To get a single channel meta via address\n    getChannelMetaViaAddressAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelAddress]) {\n          const channelID = this.state.channelsMeta[channelAddress];\n\n          console.log(\"getChannelMetaViaAddressAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          // Can't cache this :(, no way to know channel id\n          await EPNSCoreHelper.getChannelInfo(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // resolve\n              console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaViaAddressAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // CHANNELS INFO FUNCTIONS\n    // To get a single channel meta via id\n    getChannelJsonAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsJson[channelAddress]) {\n          console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n          resolve(this.state.channelsJson[channelAddress]);\n        }\n        else {\n          await EPNSCoreHelper.getChannelJsonFromChannelAddress(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // First set the cache\n              this.state.channelsJson[channelAddress] = response;\n\n              // resolve\n              console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n}\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n// import { bigNumber } from 'ethers/utils'\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n    }\n\n    // init\n    init = (account, epnsReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(null, this.state.account);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      }\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      }\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.publicKeyRegistered = true;\n      }\n\n      contract.once(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","import React, { useCallback } from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\n\nimport TokenVestingApp from \"../components/TokenVestingApp\";\nimport AdminPanel from \"../components/AdminPanel\";\nimport YieldFarming from 'segments/YieldFarming';\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n// Create Header\nfunction Home({ setBadgeCount, bellPressed }) {\n  ReactGA.pageview('/home');\n\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n\n  React.useEffect(() => {\n    // Reset when account refreshes\n    userClickedAt(0);\n  }, []);\n\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  const isAccountAdmin = () => {\n    if (account == \"0xFbA7Df351ADD4E79099f63E33b2679EDFDD5e2aB\" ||\n        account == \"0x0ec9990fFdA6484B6047ed874f173fbD37f939F7\" ||\n        account == \"0x2E06acc49D2B0724a3681B6b0C264a74786C98d5\" ||\n        account == \"0x742D46D44E627375F7439CFC9042bB48A47A8C0A\" ||\n        account == \"0x3054C63304548F8477A734DA36077bE6a983DCaD\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        {/* <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/yield.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Yield Farming</ControlText>\n        </ControlButton> */}\n\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/investor.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Investors</ControlText>\n        </ControlButton>\n\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#674c9f\"\n          onClick={() => {\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/advisor.svg\" active={controlAt == 1 ? 1 : 0} />\n          <ControlText active={controlAt == 1 ? 1 : 0}>Advisors/Team</ControlText>\n        </ControlButton>\n\n        {isAccountAdmin() &&\n          <>\n            <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#e20880\"\n              onClick={() => {\n                userClickedAt(2)\n              }}\n            >\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0} />\n              <ControlText active={controlAt == 2 ? 1 : 0}>Foundation</ControlText>\n            </ControlButton>\n\n            <ControlButton index={3} active={controlAt == 3 ? 1 : 0} border=\"#e20880\"\n              onClick={() => {\n                userClickedAt(3)\n              }}\n            >\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 3 ? 1 : 0} />\n              <ControlText active={controlAt == 3 ? 1 : 0}>Admin Controls</ControlText>\n            </ControlButton>\n          </>\n        }\n      </Controls>\n\n      <Interface>\n        {/* {controlAt == 0 &&\n          <YieldFarming />\n        } */}\n        {controlAt == 0 &&\n          <TokenVestingApp multipleVesting={true} vestingAddresses={null} loaderTheme=\"#35c5f3\" loadAPR={true} actionable={() => userClickedAt(0)} />\n        }\n        {controlAt == 1 &&\n          <TokenVestingApp multipleVesting={false} vestingAddresses={null} loaderTheme=\"#674c9f\" loadAPR={true} actionable={() => userClickedAt(0)} />\n        }\n        {controlAt == 2 && isAccountAdmin() &&\n          <TokenVestingApp multipleVesting={true} vestingAddresses={[addresses.vestedReserves.foundationA, addresses.vestedReserves.foundationB]} loaderTheme=\"#e20880\" loadAPR={false} actionable={null} />\n        }\n        {controlAt == 3 && isAccountAdmin() &&\n          <AdminPanel />\n        }\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nconst ControlButton = styled.div`\n  flex: 1 1 21%;\n  height: 120px;\n  min-width: 200px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  border-bottom: 10px solid rgb(180,180,180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(3.5) translate(-20px, 0px);\n    opacity: 0.4;\n  `};\n`\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.3) translate(-10px, 0px);\n  `};\n`\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 15px;\n  overflow: hidden;\n`\n\n// Export Default\nexport default Home;\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Content, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error, account, chainId } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to Mainnet\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={badgeCount}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, H2, H3, B, A} from 'components/SharedStyling';\n\nimport Loader from 'react-loader-spinner'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks'\nimport {\n  injected,\n  walletconnect,\n  portis,\n  trezor,\n  ledger\n} from 'connectors'\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst web3Connectors = {\n  Injected: {obj: injected, logo: './svg/login/metamask.svg', title: 'MetaMask'},\n  WalletConnect: {obj: walletconnect, logo: './svg/login/walletconnect.svg', title: 'Wallet Connect'},\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  Ledger: {obj: ledger, logo: './svg/login/ledger.svg', title: 'Ledger'},\n  Portis: {obj: portis, logo: './svg/login/portis.svg', title: 'Portis'},\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nexport default function() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        ⛓\n      </span>\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\n    </>\n  )\n}\n\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // Initialize GA\n  ReactGA.initialize('UA-165415629-5');\n  ReactGA.pageview('/login');\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n        {(active) && !error && (\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n            />\n          </HomeContainer>\n\n        )}\n\n        {!active &&\n          <Item>\n            <ProviderLogo src=\"./epnshomelogo.png\" srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"} />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Connect</Span><Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH\n                maxWidth=\"800px\"\n                align=\"stretch\"\n              >\n                {Object.keys(web3Connectors).map(name => {\n                  const currentConnector = web3Connectors[name].obj\n                  const activating = currentConnector === activatingConnector\n                  const connected = currentConnector === connector\n                  const disabled = !triedEager || !!activatingConnector || connected || !!error\n                  const image = web3Connectors[name].logo\n                  const title = web3Connectors[name].title\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector)\n                        activate(currentConnector)\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  )\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our <A href=\"https://epns.io/tos\" target=\"_blank\">Terms of Service</A> and our <A href=\"https://epns.io/privacy\" target=\"_blank\">Privacy Policy</A>.\n            </Span>\n          </Item>\n        }\n        </ParentContainer>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {}\n  .Toastify__toast {}\n  .Toastify__toast--error {}\n  .Toastify__toast--warning {}\n  .Toastify__toast--success {}\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsprod\",\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}